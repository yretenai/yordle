/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_MapContainer
#pragma once

#include <memory>
#include <string>
#include <vector>
#include <array>
#include <map>

#include <yordle/data/meta/bin_defs/MapComponent.hpp>
#include <yordle/data/meta/bin_defs/MapPlaceableContainer.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
#ifndef YORDLE_META_DEF_MapComponent
    struct MapComponent;
#endif

#ifndef YORDLE_META_DEF_MapPlaceableContainer
    struct MapPlaceableContainer;
#endif
    struct YORDLE_EXPORT MapContainer : public bin_class {
        explicit MapContainer(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3723018516u;
        }

        std::string mapPath {};
        std::vector<std::shared_ptr<yordle::data::meta::MapComponent>> components {};
        std::array<float, 2> boundsMin { 0, 0 };
        std::array<float, 2> boundsMax { 14820, 14881 };
        float lowestWalkableHeight = 0.0;
        float xf010defb = 0.0;
        std::map<yordle::data::meta::bin_fnv_hash, yordle::data::meta::bin_ref<yordle::data::meta::MapPlaceableContainer>> chunks {};
    };
}
#define YORDLE_META_DEF_MapContainer
#endif
