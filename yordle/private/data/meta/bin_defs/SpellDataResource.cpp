/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#include <yordle/data/meta/bin_defs/SpellDataResource.hpp>

#include <yordle/data/meta/bin_defs/ObjectTags.hpp>
#include <yordle/data/meta/bin_defs/ICastRequirement.hpp>
#include <yordle/data/meta/bin_defs/x7a9e7d89.hpp>
#include <yordle/data/meta/bin_defs/PlatformSpellInfo.hpp>
#include <yordle/data/meta/bin_defs/SpellEffectAmount.hpp>
#include <yordle/data/meta/bin_defs/SpellDataValue.hpp>
#include <yordle/data/meta/bin_defs/SpellDataValueVector.hpp>
#include <yordle/data/meta/bin_defs/IGameCalculation.hpp>
#include <yordle/data/meta/bin_defs/AlternateSpellAssets.hpp>
#include <yordle/data/meta/bin_defs/SpellLockDeltaTimeData.hpp>
#include <yordle/data/meta/bin_defs/SpellPassiveData.hpp>
#include <yordle/data/meta/bin_defs/CharacterPassiveData.hpp>
#include <yordle/data/meta/bin_defs/OverrideAttackTimeData.hpp>
#include <yordle/data/meta/bin_defs/UseAutoattackCastTimeData.hpp>
#include <yordle/data/meta/bin_defs/MissileSpecification.hpp>
#include <yordle/data/meta/bin_defs/AISpellData.hpp>
#include <yordle/data/meta/bin_defs/SpellDataResourceClient.hpp>
#include <yordle/data/meta/bin_defs/TargetingTypeData.hpp>
#include <yordle/data/meta/bin_defs/xefc7f35c.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/prop/empty_prop.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>
#include <yordle/data/prop/structure_prop.hpp>

yordle::data::meta::SpellDataResource::SpellDataResource(const std::shared_ptr<yordle::data::prop::structure_prop> &prop) : yordle::data::meta::bin_class(prop) {
    if(prop == nullptr) {
        return;
    }
    auto ptr_flags = prop->cast_prop<yordle::data::prop::uint32_prop>(2624027180u);
    if(ptr_flags != nullptr) {
        flags = ptr_flags->value;
    }

    auto ptr_xb4b840e6 = prop->cast_prop<yordle::data::prop::uint32_prop>(3031974118u);
    if(ptr_xb4b840e6 != nullptr) {
        xb4b840e6 = ptr_xb4b840e6->value;
    }

    auto ptr_mAffectsTypeFlags = prop->cast_prop<yordle::data::prop::uint32_prop>(3975411853u);
    if(ptr_mAffectsTypeFlags != nullptr) {
        mAffectsTypeFlags = ptr_mAffectsTypeFlags->value;
    }

    auto ptr_mAffectsStatusFlags = prop->cast_prop<yordle::data::prop::uint32_prop>(2434399679u);
    if(ptr_mAffectsStatusFlags != nullptr) {
        mAffectsStatusFlags = ptr_mAffectsStatusFlags->value;
    }

    auto ptr_mRequiredUnitTags = prop->cast_prop<yordle::data::prop::inline_structure_prop>(990703966u);
    if(ptr_mRequiredUnitTags != nullptr) {
        mRequiredUnitTags = yordle::data::meta::deserialize<yordle::data::meta::ObjectTags>(ptr_mRequiredUnitTags, 622921539u);
    }

    auto ptr_mExcludedUnitTags = prop->cast_prop<yordle::data::prop::inline_structure_prop>(2460402589u);
    if(ptr_mExcludedUnitTags != nullptr) {
        mExcludedUnitTags = yordle::data::meta::deserialize<yordle::data::meta::ObjectTags>(ptr_mExcludedUnitTags, 622921539u);
    }

    auto ptr_mCastRequirementsCaster = prop->cast_prop<yordle::data::prop::set_prop>(934336299u);
    if(ptr_mCastRequirementsCaster != nullptr) {
        for(const auto &set_mCastRequirementsCaster_entry : ptr_mCastRequirementsCaster->value) {
            auto ptr_mCastRequirementsCaster_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::structure_prop>(set_mCastRequirementsCaster_entry);
            if(ptr_mCastRequirementsCaster_entry != nullptr) {
                mCastRequirementsCaster.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::ICastRequirement>(ptr_mCastRequirementsCaster_entry, 1550969638u));
            }
        }
    }

    auto ptr_mCastRequirementsTarget = prop->cast_prop<yordle::data::prop::set_prop>(3251632550u);
    if(ptr_mCastRequirementsTarget != nullptr) {
        for(const auto &set_mCastRequirementsTarget_entry : ptr_mCastRequirementsTarget->value) {
            auto ptr_mCastRequirementsTarget_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::structure_prop>(set_mCastRequirementsTarget_entry);
            if(ptr_mCastRequirementsTarget_entry != nullptr) {
                mCastRequirementsTarget.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::ICastRequirement>(ptr_mCastRequirementsTarget_entry, 1550969638u));
            }
        }
    }

    auto ptr_x7a9e7d89 = prop->cast_prop<yordle::data::prop::set_prop>(2057207177u);
    if(ptr_x7a9e7d89 != nullptr) {
        for(const auto &set_x7a9e7d89_entry : ptr_x7a9e7d89->value) {
            auto ptr_x7a9e7d89_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_x7a9e7d89_entry);
            if(ptr_x7a9e7d89_entry != nullptr) {
                x7a9e7d89.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::x7a9e7d89>(ptr_x7a9e7d89_entry, 2057207177u));
            }
        }
    }

    auto ptr_mPlatformSpellInfo = prop->cast_prop<yordle::data::prop::inline_structure_prop>(2500445979u);
    if(ptr_mPlatformSpellInfo != nullptr) {
        mPlatformSpellInfo = yordle::data::meta::deserialize<yordle::data::meta::PlatformSpellInfo>(ptr_mPlatformSpellInfo, 1523572560u);
    }

    auto ptr_mAlternateName = prop->cast_prop<yordle::data::prop::string_prop>(1152903389u);
    if(ptr_mAlternateName != nullptr) {
        mAlternateName = ptr_mAlternateName->value;
    }

    auto ptr_mSpellTags = prop->cast_prop<yordle::data::prop::set_prop>(1042209755u);
    if(ptr_mSpellTags != nullptr) {
        for(const auto &set_mSpellTags_entry : ptr_mSpellTags->value) {
            auto ptr_mSpellTags_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_mSpellTags_entry);
            if(ptr_mSpellTags_entry != nullptr) {
                mSpellTags.emplace_back(ptr_mSpellTags_entry->value);
            }
        }
    }

    auto ptr_mEffectAmount = prop->cast_prop<yordle::data::prop::set_prop>(622481957u);
    if(ptr_mEffectAmount != nullptr) {
        auto index_mEffectAmount = 0;
        for(const auto &set_mEffectAmount_entry : ptr_mEffectAmount->value) {
            auto ptr_mEffectAmount_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mEffectAmount_entry);
            if(ptr_mEffectAmount_entry != nullptr) {
                mEffectAmount[index_mEffectAmount] = yordle::data::meta::deserialize<yordle::data::meta::SpellEffectAmount>(ptr_mEffectAmount_entry, 2463406204u);
            }
            index_mEffectAmount++;
        }
    }

    auto ptr_mDataValues = prop->cast_prop<yordle::data::prop::set_prop>(525148326u);
    if(ptr_mDataValues != nullptr) {
        for(const auto &set_mDataValues_entry : ptr_mDataValues->value) {
            auto ptr_mDataValues_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mDataValues_entry);
            if(ptr_mDataValues_entry != nullptr) {
                mDataValues.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::SpellDataValue>(ptr_mDataValues_entry, 5245094u));
            }
        }
    }

    auto ptr_xfb56608c = prop->cast_prop<yordle::data::prop::map_prop>(4216742028u);
    if(ptr_xfb56608c != nullptr) {
        for(const auto &set_xfb56608c_pair : ptr_xfb56608c->value) {
            auto ptr_xfb56608c_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_xfb56608c_pair.first);
            auto ptr_xfb56608c_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_xfb56608c_pair.second);
            if(ptr_xfb56608c_key != nullptr && ptr_xfb56608c_value != nullptr) {
                xfb56608c.emplace(ptr_xfb56608c_key->value, yordle::data::meta::deserialize<yordle::data::meta::SpellDataValueVector>(ptr_xfb56608c_value, 1798273677u));
            }
        }
    }

    auto ptr_mSpellCalculations = prop->cast_prop<yordle::data::prop::map_prop>(2488738436u);
    if(ptr_mSpellCalculations != nullptr) {
        for(const auto &set_mSpellCalculations_pair : ptr_mSpellCalculations->value) {
            auto ptr_mSpellCalculations_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_mSpellCalculations_pair.first);
            auto ptr_mSpellCalculations_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::structure_prop>(set_mSpellCalculations_pair.second);
            if(ptr_mSpellCalculations_key != nullptr && ptr_mSpellCalculations_value != nullptr) {
                mSpellCalculations.emplace(ptr_mSpellCalculations_key->value, yordle::data::meta::deserialize<yordle::data::meta::IGameCalculation>(ptr_mSpellCalculations_value, 389493299u));
            }
        }
    }

    auto ptr_mCoefficient = prop->cast_prop<yordle::data::prop::float32_prop>(693905545u);
    if(ptr_mCoefficient != nullptr) {
        mCoefficient = ptr_mCoefficient->value;
    }

    auto ptr_mCoefficient2 = prop->cast_prop<yordle::data::prop::float32_prop>(3608419937u);
    if(ptr_mCoefficient2 != nullptr) {
        mCoefficient2 = ptr_mCoefficient2->value;
    }

    auto ptr_mAlternateSpellAssets = prop->cast_prop<yordle::data::prop::set_prop>(3464567601u);
    if(ptr_mAlternateSpellAssets != nullptr) {
        for(const auto &set_mAlternateSpellAssets_entry : ptr_mAlternateSpellAssets->value) {
            auto ptr_mAlternateSpellAssets_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mAlternateSpellAssets_entry);
            if(ptr_mAlternateSpellAssets_entry != nullptr) {
                mAlternateSpellAssets.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::AlternateSpellAssets>(ptr_mAlternateSpellAssets_entry, 609301268u));
            }
        }
    }

    auto ptr_mAnimationName = prop->cast_prop<yordle::data::prop::string_prop>(4224806837u);
    if(ptr_mAnimationName != nullptr) {
        mAnimationName = ptr_mAnimationName->value;
    }

    auto ptr_mAnimationLoopName = prop->cast_prop<yordle::data::prop::string_prop>(232091943u);
    if(ptr_mAnimationLoopName != nullptr) {
        mAnimationLoopName = ptr_mAnimationLoopName->value;
    }

    auto ptr_mAnimationWinddownName = prop->cast_prop<yordle::data::prop::string_prop>(4009553947u);
    if(ptr_mAnimationWinddownName != nullptr) {
        mAnimationWinddownName = ptr_mAnimationWinddownName->value;
    }

    auto ptr_mAnimationLeadOutName = prop->cast_prop<yordle::data::prop::string_prop>(3242492963u);
    if(ptr_mAnimationLeadOutName != nullptr) {
        mAnimationLeadOutName = ptr_mAnimationLeadOutName->value;
    }

    auto ptr_mImgIconName = prop->cast_prop<yordle::data::prop::set_prop>(4007034069u);
    if(ptr_mImgIconName != nullptr) {
        for(const auto &set_mImgIconName_entry : ptr_mImgIconName->value) {
            auto ptr_mImgIconName_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_mImgIconName_entry);
            if(ptr_mImgIconName_entry != nullptr) {
                mImgIconName.emplace_back(ptr_mImgIconName_entry->value);
            }
        }
    }

    auto ptr_x21753196 = prop->cast_prop<yordle::data::prop::string_prop>(561328534u);
    if(ptr_x21753196 != nullptr) {
        x21753196 = ptr_x21753196->value;
    }

    auto ptr_mMinimapIconName = prop->cast_prop<yordle::data::prop::string_prop>(2116383141u);
    if(ptr_mMinimapIconName != nullptr) {
        mMinimapIconName = ptr_mMinimapIconName->value;
    }

    auto ptr_mKeywordWhenAcquired = prop->cast_prop<yordle::data::prop::string_prop>(2669850935u);
    if(ptr_mKeywordWhenAcquired != nullptr) {
        mKeywordWhenAcquired = ptr_mKeywordWhenAcquired->value;
    }

    auto ptr_mCastTime = prop->cast_prop<yordle::data::prop::float32_prop>(2432370038u);
    if(ptr_mCastTime != nullptr) {
        mCastTime = ptr_mCastTime->value;
    }

    auto ptr_mChannelDuration = prop->cast_prop<yordle::data::prop::set_prop>(418680967u);
    if(ptr_mChannelDuration != nullptr) {
        auto index_mChannelDuration = 0;
        for(const auto &set_mChannelDuration_entry : ptr_mChannelDuration->value) {
            auto ptr_mChannelDuration_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_mChannelDuration_entry);
            if(ptr_mChannelDuration_entry != nullptr) {
                mChannelDuration[index_mChannelDuration] = ptr_mChannelDuration_entry->value;
            }
            index_mChannelDuration++;
        }
    }

    auto ptr_CooldownTime = prop->cast_prop<yordle::data::prop::set_prop>(2664088481u);
    if(ptr_CooldownTime != nullptr) {
        auto index_CooldownTime = 0;
        for(const auto &set_CooldownTime_entry : ptr_CooldownTime->value) {
            auto ptr_CooldownTime_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_CooldownTime_entry);
            if(ptr_CooldownTime_entry != nullptr) {
                CooldownTime[index_CooldownTime] = ptr_CooldownTime_entry->value;
            }
            index_CooldownTime++;
        }
    }

    auto ptr_delayCastOffsetPercent = prop->cast_prop<yordle::data::prop::float32_prop>(405997925u);
    if(ptr_delayCastOffsetPercent != nullptr) {
        delayCastOffsetPercent = ptr_delayCastOffsetPercent->value;
    }

    auto ptr_delayTotalTimePercent = prop->cast_prop<yordle::data::prop::float32_prop>(978077328u);
    if(ptr_delayTotalTimePercent != nullptr) {
        delayTotalTimePercent = ptr_delayTotalTimePercent->value;
    }

    auto ptr_mPreCastLockoutDeltaTime = prop->cast_prop<yordle::data::prop::float32_prop>(4048276222u);
    if(ptr_mPreCastLockoutDeltaTime != nullptr) {
        mPreCastLockoutDeltaTime = ptr_mPreCastLockoutDeltaTime->value;
    }

    auto ptr_mPreCastLockoutDeltaTimeData = prop->cast_prop<yordle::data::prop::structure_prop>(1870394526u);
    if(ptr_mPreCastLockoutDeltaTimeData != nullptr) {
        mPreCastLockoutDeltaTimeData = yordle::data::meta::deserialize<yordle::data::meta::SpellLockDeltaTimeData>(ptr_mPreCastLockoutDeltaTimeData, 3565606633u);
    }

    auto ptr_mPostCastLockoutDeltaTime = prop->cast_prop<yordle::data::prop::float32_prop>(2785650565u);
    if(ptr_mPostCastLockoutDeltaTime != nullptr) {
        mPostCastLockoutDeltaTime = ptr_mPostCastLockoutDeltaTime->value;
    }

    auto ptr_mPostCastLockoutDeltaTimeData = prop->cast_prop<yordle::data::prop::structure_prop>(1498177893u);
    if(ptr_mPostCastLockoutDeltaTimeData != nullptr) {
        mPostCastLockoutDeltaTimeData = yordle::data::meta::deserialize<yordle::data::meta::SpellLockDeltaTimeData>(ptr_mPostCastLockoutDeltaTimeData, 3565606633u);
    }

    auto ptr_mStartCooldown = prop->cast_prop<yordle::data::prop::float32_prop>(125931661u);
    if(ptr_mStartCooldown != nullptr) {
        mStartCooldown = ptr_mStartCooldown->value;
    }

    auto ptr_mCastRangeGrowthMax = prop->cast_prop<yordle::data::prop::set_prop>(3165566675u);
    if(ptr_mCastRangeGrowthMax != nullptr) {
        auto index_mCastRangeGrowthMax = 0;
        for(const auto &set_mCastRangeGrowthMax_entry : ptr_mCastRangeGrowthMax->value) {
            auto ptr_mCastRangeGrowthMax_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_mCastRangeGrowthMax_entry);
            if(ptr_mCastRangeGrowthMax_entry != nullptr) {
                mCastRangeGrowthMax[index_mCastRangeGrowthMax] = ptr_mCastRangeGrowthMax_entry->value;
            }
            index_mCastRangeGrowthMax++;
        }
    }

    auto ptr_mCastRangeGrowthStartTime = prop->cast_prop<yordle::data::prop::set_prop>(2764169136u);
    if(ptr_mCastRangeGrowthStartTime != nullptr) {
        auto index_mCastRangeGrowthStartTime = 0;
        for(const auto &set_mCastRangeGrowthStartTime_entry : ptr_mCastRangeGrowthStartTime->value) {
            auto ptr_mCastRangeGrowthStartTime_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_mCastRangeGrowthStartTime_entry);
            if(ptr_mCastRangeGrowthStartTime_entry != nullptr) {
                mCastRangeGrowthStartTime[index_mCastRangeGrowthStartTime] = ptr_mCastRangeGrowthStartTime_entry->value;
            }
            index_mCastRangeGrowthStartTime++;
        }
    }

    auto ptr_mCastRangeGrowthDuration = prop->cast_prop<yordle::data::prop::set_prop>(23505855u);
    if(ptr_mCastRangeGrowthDuration != nullptr) {
        auto index_mCastRangeGrowthDuration = 0;
        for(const auto &set_mCastRangeGrowthDuration_entry : ptr_mCastRangeGrowthDuration->value) {
            auto ptr_mCastRangeGrowthDuration_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_mCastRangeGrowthDuration_entry);
            if(ptr_mCastRangeGrowthDuration_entry != nullptr) {
                mCastRangeGrowthDuration[index_mCastRangeGrowthDuration] = ptr_mCastRangeGrowthDuration_entry->value;
            }
            index_mCastRangeGrowthDuration++;
        }
    }

    auto ptr_mChargeUpdateInterval = prop->cast_prop<yordle::data::prop::float32_prop>(4145291048u);
    if(ptr_mChargeUpdateInterval != nullptr) {
        mChargeUpdateInterval = ptr_mChargeUpdateInterval->value;
    }

    auto ptr_mCancelChargeOnRecastTime = prop->cast_prop<yordle::data::prop::float32_prop>(1511691408u);
    if(ptr_mCancelChargeOnRecastTime != nullptr) {
        mCancelChargeOnRecastTime = ptr_mCancelChargeOnRecastTime->value;
    }

    auto ptr_x3d746f1f = prop->cast_prop<yordle::data::prop::uint8_prop>(1031040799u);
    if(ptr_x3d746f1f != nullptr) {
        x3d746f1f = ptr_x3d746f1f->value;
    }

    auto ptr_x1632f6fc = prop->cast_prop<yordle::data::prop::set_prop>(372438780u);
    if(ptr_x1632f6fc != nullptr) {
        for(const auto &set_x1632f6fc_entry : ptr_x1632f6fc->value) {
            auto ptr_x1632f6fc_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::structure_prop>(set_x1632f6fc_entry);
            if(ptr_x1632f6fc_entry != nullptr) {
                x1632f6fc.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::SpellPassiveData>(ptr_x1632f6fc_entry, 3562978890u));
            }
        }
    }

    auto ptr_mCharacterPassiveBuffs = prop->cast_prop<yordle::data::prop::set_prop>(3138631806u);
    if(ptr_mCharacterPassiveBuffs != nullptr) {
        for(const auto &set_mCharacterPassiveBuffs_entry : ptr_mCharacterPassiveBuffs->value) {
            auto ptr_mCharacterPassiveBuffs_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mCharacterPassiveBuffs_entry);
            if(ptr_mCharacterPassiveBuffs_entry != nullptr) {
                mCharacterPassiveBuffs.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::CharacterPassiveData>(ptr_mCharacterPassiveBuffs_entry, 2393107013u));
            }
        }
    }

    auto ptr_mMaxAmmo = prop->cast_prop<yordle::data::prop::set_prop>(1489691856u);
    if(ptr_mMaxAmmo != nullptr) {
        auto index_mMaxAmmo = 0;
        for(const auto &set_mMaxAmmo_entry : ptr_mMaxAmmo->value) {
            auto ptr_mMaxAmmo_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::int32_prop>(set_mMaxAmmo_entry);
            if(ptr_mMaxAmmo_entry != nullptr) {
                mMaxAmmo[index_mMaxAmmo] = ptr_mMaxAmmo_entry->value;
            }
            index_mMaxAmmo++;
        }
    }

    auto ptr_mAmmoUsed = prop->cast_prop<yordle::data::prop::set_prop>(2354913055u);
    if(ptr_mAmmoUsed != nullptr) {
        auto index_mAmmoUsed = 0;
        for(const auto &set_mAmmoUsed_entry : ptr_mAmmoUsed->value) {
            auto ptr_mAmmoUsed_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::int32_prop>(set_mAmmoUsed_entry);
            if(ptr_mAmmoUsed_entry != nullptr) {
                mAmmoUsed[index_mAmmoUsed] = ptr_mAmmoUsed_entry->value;
            }
            index_mAmmoUsed++;
        }
    }

    auto ptr_mAmmoRechargeTime = prop->cast_prop<yordle::data::prop::set_prop>(3667180802u);
    if(ptr_mAmmoRechargeTime != nullptr) {
        auto index_mAmmoRechargeTime = 0;
        for(const auto &set_mAmmoRechargeTime_entry : ptr_mAmmoRechargeTime->value) {
            auto ptr_mAmmoRechargeTime_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_mAmmoRechargeTime_entry);
            if(ptr_mAmmoRechargeTime_entry != nullptr) {
                mAmmoRechargeTime[index_mAmmoRechargeTime] = ptr_mAmmoRechargeTime_entry->value;
            }
            index_mAmmoRechargeTime++;
        }
    }

    auto ptr_mIsDelayedByCastLocked = prop->cast_prop<yordle::data::prop::bool_prop>(580001390u);
    if(ptr_mIsDelayedByCastLocked != nullptr) {
        mIsDelayedByCastLocked = ptr_mIsDelayedByCastLocked->value;
    }

    auto ptr_mAmmoNotAffectedByCDR = prop->cast_prop<yordle::data::prop::bool_prop>(2714842049u);
    if(ptr_mAmmoNotAffectedByCDR != nullptr) {
        mAmmoNotAffectedByCDR = ptr_mAmmoNotAffectedByCDR->value;
    }

    auto ptr_mCooldownNotAffectedByCDR = prop->cast_prop<yordle::data::prop::bool_prop>(2871283782u);
    if(ptr_mCooldownNotAffectedByCDR != nullptr) {
        mCooldownNotAffectedByCDR = ptr_mCooldownNotAffectedByCDR->value;
    }

    auto ptr_mAmmoCountHiddenInUI = prop->cast_prop<yordle::data::prop::bool_prop>(2117865532u);
    if(ptr_mAmmoCountHiddenInUI != nullptr) {
        mAmmoCountHiddenInUI = ptr_mAmmoCountHiddenInUI->value;
    }

    auto ptr_mCostAlwaysShownInUI = prop->cast_prop<yordle::data::prop::bool_prop>(3135575252u);
    if(ptr_mCostAlwaysShownInUI != nullptr) {
        mCostAlwaysShownInUI = ptr_mCostAlwaysShownInUI->value;
    }

    auto ptr_x9fb86dc4 = prop->cast_prop<yordle::data::prop::bool_prop>(2679664068u);
    if(ptr_x9fb86dc4 != nullptr) {
        x9fb86dc4 = ptr_x9fb86dc4->value;
    }

    auto ptr_cannotBeSuppressed = prop->cast_prop<yordle::data::prop::bool_prop>(216511841u);
    if(ptr_cannotBeSuppressed != nullptr) {
        cannotBeSuppressed = ptr_cannotBeSuppressed->value;
    }

    auto ptr_canCastWhileDisabled = prop->cast_prop<yordle::data::prop::bool_prop>(3680711203u);
    if(ptr_canCastWhileDisabled != nullptr) {
        canCastWhileDisabled = ptr_canCastWhileDisabled->value;
    }

    auto ptr_mCanTriggerChargeSpellWhileDisabled = prop->cast_prop<yordle::data::prop::bool_prop>(3058956361u);
    if(ptr_mCanTriggerChargeSpellWhileDisabled != nullptr) {
        mCanTriggerChargeSpellWhileDisabled = ptr_mCanTriggerChargeSpellWhileDisabled->value;
    }

    auto ptr_canCastOrQueueWhileCasting = prop->cast_prop<yordle::data::prop::bool_prop>(508461680u);
    if(ptr_canCastOrQueueWhileCasting != nullptr) {
        canCastOrQueueWhileCasting = ptr_canCastOrQueueWhileCasting->value;
    }

    auto ptr_canOnlyCastWhileDisabled = prop->cast_prop<yordle::data::prop::bool_prop>(1095615469u);
    if(ptr_canOnlyCastWhileDisabled != nullptr) {
        canOnlyCastWhileDisabled = ptr_canOnlyCastWhileDisabled->value;
    }

    auto ptr_mCantCancelWhileWindingUp = prop->cast_prop<yordle::data::prop::bool_prop>(3810627996u);
    if(ptr_mCantCancelWhileWindingUp != nullptr) {
        mCantCancelWhileWindingUp = ptr_mCantCancelWhileWindingUp->value;
    }

    auto ptr_x7e3432a0 = prop->cast_prop<yordle::data::prop::bool_prop>(2117350048u);
    if(ptr_x7e3432a0 != nullptr) {
        x7e3432a0 = ptr_x7e3432a0->value;
    }

    auto ptr_mCantCancelWhileChanneling = prop->cast_prop<yordle::data::prop::bool_prop>(1427842188u);
    if(ptr_mCantCancelWhileChanneling != nullptr) {
        mCantCancelWhileChanneling = ptr_mCantCancelWhileChanneling->value;
    }

    auto ptr_cantCastWhileRooted = prop->cast_prop<yordle::data::prop::bool_prop>(2282014800u);
    if(ptr_cantCastWhileRooted != nullptr) {
        cantCastWhileRooted = ptr_cantCastWhileRooted->value;
    }

    auto ptr_mChannelIsInterruptedByDisables = prop->cast_prop<yordle::data::prop::bool_prop>(1619262319u);
    if(ptr_mChannelIsInterruptedByDisables != nullptr) {
        mChannelIsInterruptedByDisables = ptr_mChannelIsInterruptedByDisables->value;
    }

    auto ptr_mChannelIsInterruptedByAttacking = prop->cast_prop<yordle::data::prop::bool_prop>(2773480534u);
    if(ptr_mChannelIsInterruptedByAttacking != nullptr) {
        mChannelIsInterruptedByAttacking = ptr_mChannelIsInterruptedByAttacking->value;
    }

    auto ptr_mApplyAttackDamage = prop->cast_prop<yordle::data::prop::bool_prop>(2998674137u);
    if(ptr_mApplyAttackDamage != nullptr) {
        mApplyAttackDamage = ptr_mApplyAttackDamage->value;
    }

    auto ptr_mApplyAttackEffect = prop->cast_prop<yordle::data::prop::bool_prop>(192023593u);
    if(ptr_mApplyAttackEffect != nullptr) {
        mApplyAttackEffect = ptr_mApplyAttackEffect->value;
    }

    auto ptr_mApplyMaterialOnHitSound = prop->cast_prop<yordle::data::prop::bool_prop>(2763567716u);
    if(ptr_mApplyMaterialOnHitSound != nullptr) {
        mApplyMaterialOnHitSound = ptr_mApplyMaterialOnHitSound->value;
    }

    auto ptr_mDoesntBreakChannels = prop->cast_prop<yordle::data::prop::bool_prop>(284984490u);
    if(ptr_mDoesntBreakChannels != nullptr) {
        mDoesntBreakChannels = ptr_mDoesntBreakChannels->value;
    }

    auto ptr_mBelongsToAvatar = prop->cast_prop<yordle::data::prop::bool_prop>(401764204u);
    if(ptr_mBelongsToAvatar != nullptr) {
        mBelongsToAvatar = ptr_mBelongsToAvatar->value;
    }

    auto ptr_mIsDisabledWhileDead = prop->cast_prop<yordle::data::prop::bool_prop>(1731703631u);
    if(ptr_mIsDisabledWhileDead != nullptr) {
        mIsDisabledWhileDead = ptr_mIsDisabledWhileDead->value;
    }

    auto ptr_canOnlyCastWhileDead = prop->cast_prop<yordle::data::prop::bool_prop>(2597305263u);
    if(ptr_canOnlyCastWhileDead != nullptr) {
        canOnlyCastWhileDead = ptr_canOnlyCastWhileDead->value;
    }

    auto ptr_mCursorChangesInGrass = prop->cast_prop<yordle::data::prop::bool_prop>(3203663238u);
    if(ptr_mCursorChangesInGrass != nullptr) {
        mCursorChangesInGrass = ptr_mCursorChangesInGrass->value;
    }

    auto ptr_mCursorChangesInTerrain = prop->cast_prop<yordle::data::prop::bool_prop>(359003581u);
    if(ptr_mCursorChangesInTerrain != nullptr) {
        mCursorChangesInTerrain = ptr_mCursorChangesInTerrain->value;
    }

    auto ptr_mProjectTargetToCastRange = prop->cast_prop<yordle::data::prop::bool_prop>(665175815u);
    if(ptr_mProjectTargetToCastRange != nullptr) {
        mProjectTargetToCastRange = ptr_mProjectTargetToCastRange->value;
    }

    auto ptr_mSpellRevealsChampion = prop->cast_prop<yordle::data::prop::bool_prop>(1397542427u);
    if(ptr_mSpellRevealsChampion != nullptr) {
        mSpellRevealsChampion = ptr_mSpellRevealsChampion->value;
    }

    auto ptr_mUseMinimapTargeting = prop->cast_prop<yordle::data::prop::bool_prop>(3426109973u);
    if(ptr_mUseMinimapTargeting != nullptr) {
        mUseMinimapTargeting = ptr_mUseMinimapTargeting->value;
    }

    auto ptr_castRangeUseBoundingBoxes = prop->cast_prop<yordle::data::prop::bool_prop>(1282909891u);
    if(ptr_castRangeUseBoundingBoxes != nullptr) {
        castRangeUseBoundingBoxes = ptr_castRangeUseBoundingBoxes->value;
    }

    auto ptr_mMinimapIconRotation = prop->cast_prop<yordle::data::prop::bool_prop>(3127854636u);
    if(ptr_mMinimapIconRotation != nullptr) {
        mMinimapIconRotation = ptr_mMinimapIconRotation->value;
    }

    auto ptr_mUseChargeChanneling = prop->cast_prop<yordle::data::prop::bool_prop>(3003226366u);
    if(ptr_mUseChargeChanneling != nullptr) {
        mUseChargeChanneling = ptr_mUseChargeChanneling->value;
    }

    auto ptr_mCanMoveWhileChanneling = prop->cast_prop<yordle::data::prop::bool_prop>(1066124837u);
    if(ptr_mCanMoveWhileChanneling != nullptr) {
        mCanMoveWhileChanneling = ptr_mCanMoveWhileChanneling->value;
    }

    auto ptr_mDisableCastBar = prop->cast_prop<yordle::data::prop::bool_prop>(1887868596u);
    if(ptr_mDisableCastBar != nullptr) {
        mDisableCastBar = ptr_mDisableCastBar->value;
    }

    auto ptr_mShowChannelBar = prop->cast_prop<yordle::data::prop::bool_prop>(2625918045u);
    if(ptr_mShowChannelBar != nullptr) {
        mShowChannelBar = ptr_mShowChannelBar->value;
    }

    auto ptr_alwaysSnapFacing = prop->cast_prop<yordle::data::prop::bool_prop>(3748919522u);
    if(ptr_alwaysSnapFacing != nullptr) {
        alwaysSnapFacing = ptr_alwaysSnapFacing->value;
    }

    auto ptr_useAnimatorFramerate = prop->cast_prop<yordle::data::prop::bool_prop>(3510320392u);
    if(ptr_useAnimatorFramerate != nullptr) {
        useAnimatorFramerate = ptr_useAnimatorFramerate->value;
    }

    auto ptr_bHaveHitEffect = prop->cast_prop<yordle::data::prop::bool_prop>(4101645029u);
    if(ptr_bHaveHitEffect != nullptr) {
        bHaveHitEffect = ptr_bHaveHitEffect->value;
    }

    auto ptr_bHaveHitBone = prop->cast_prop<yordle::data::prop::bool_prop>(2431864418u);
    if(ptr_bHaveHitBone != nullptr) {
        bHaveHitBone = ptr_bHaveHitBone->value;
    }

    auto ptr_bIsToggleSpell = prop->cast_prop<yordle::data::prop::bool_prop>(2403475769u);
    if(ptr_bIsToggleSpell != nullptr) {
        bIsToggleSpell = ptr_bIsToggleSpell->value;
    }

    auto ptr_mDoNotNeedToFaceTarget = prop->cast_prop<yordle::data::prop::bool_prop>(1065114547u);
    if(ptr_mDoNotNeedToFaceTarget != nullptr) {
        mDoNotNeedToFaceTarget = ptr_mDoNotNeedToFaceTarget->value;
    }

    auto ptr_mTurnSpeedScalar = prop->cast_prop<yordle::data::prop::float32_prop>(1349258242u);
    if(ptr_mTurnSpeedScalar != nullptr) {
        mTurnSpeedScalar = ptr_mTurnSpeedScalar->value;
    }

    auto ptr_mNoWinddownIfCancelled = prop->cast_prop<yordle::data::prop::bool_prop>(2678716365u);
    if(ptr_mNoWinddownIfCancelled != nullptr) {
        mNoWinddownIfCancelled = ptr_mNoWinddownIfCancelled->value;
    }

    auto ptr_mIgnoreRangeCheck = prop->cast_prop<yordle::data::prop::bool_prop>(980649705u);
    if(ptr_mIgnoreRangeCheck != nullptr) {
        mIgnoreRangeCheck = ptr_mIgnoreRangeCheck->value;
    }

    auto ptr_mOrientRadiusTextureFromPlayer = prop->cast_prop<yordle::data::prop::bool_prop>(3109350027u);
    if(ptr_mOrientRadiusTextureFromPlayer != nullptr) {
        mOrientRadiusTextureFromPlayer = ptr_mOrientRadiusTextureFromPlayer->value;
    }

    auto ptr_mOverrideAttackTime = prop->cast_prop<yordle::data::prop::structure_prop>(3579459509u);
    if(ptr_mOverrideAttackTime != nullptr) {
        mOverrideAttackTime = yordle::data::meta::deserialize<yordle::data::meta::OverrideAttackTimeData>(ptr_mOverrideAttackTime, 1471545228u);
    }

    auto ptr_mUseAutoattackCastTimeData = prop->cast_prop<yordle::data::prop::structure_prop>(4119453258u);
    if(ptr_mUseAutoattackCastTimeData != nullptr) {
        mUseAutoattackCastTimeData = yordle::data::meta::deserialize<yordle::data::meta::UseAutoattackCastTimeData>(ptr_mUseAutoattackCastTimeData, 868276581u);
    }

    auto ptr_mIgnoreAnimContinueUntilCastFrame = prop->cast_prop<yordle::data::prop::bool_prop>(3420962994u);
    if(ptr_mIgnoreAnimContinueUntilCastFrame != nullptr) {
        mIgnoreAnimContinueUntilCastFrame = ptr_mIgnoreAnimContinueUntilCastFrame->value;
    }

    auto ptr_mHideRangeIndicatorWhenCasting = prop->cast_prop<yordle::data::prop::bool_prop>(1658987763u);
    if(ptr_mHideRangeIndicatorWhenCasting != nullptr) {
        mHideRangeIndicatorWhenCasting = ptr_mHideRangeIndicatorWhenCasting->value;
    }

    auto ptr_mUpdateRotationWhenCasting = prop->cast_prop<yordle::data::prop::bool_prop>(2593314464u);
    if(ptr_mUpdateRotationWhenCasting != nullptr) {
        mUpdateRotationWhenCasting = ptr_mUpdateRotationWhenCasting->value;
    }

    auto ptr_mPingableWhileDisabled = prop->cast_prop<yordle::data::prop::bool_prop>(4074816557u);
    if(ptr_mPingableWhileDisabled != nullptr) {
        mPingableWhileDisabled = ptr_mPingableWhileDisabled->value;
    }

    auto ptr_mConsideredAsAutoAttack = prop->cast_prop<yordle::data::prop::bool_prop>(3740303549u);
    if(ptr_mConsideredAsAutoAttack != nullptr) {
        mConsideredAsAutoAttack = ptr_mConsideredAsAutoAttack->value;
    }

    auto ptr_mDoesNotConsumeMana = prop->cast_prop<yordle::data::prop::bool_prop>(2317807787u);
    if(ptr_mDoesNotConsumeMana != nullptr) {
        mDoesNotConsumeMana = ptr_mDoesNotConsumeMana->value;
    }

    auto ptr_mDoesNotConsumeCooldown = prop->cast_prop<yordle::data::prop::bool_prop>(2764917413u);
    if(ptr_mDoesNotConsumeCooldown != nullptr) {
        mDoesNotConsumeCooldown = ptr_mDoesNotConsumeCooldown->value;
    }

    auto ptr_mLockedSpellOriginationCastID = prop->cast_prop<yordle::data::prop::bool_prop>(4013500057u);
    if(ptr_mLockedSpellOriginationCastID != nullptr) {
        mLockedSpellOriginationCastID = ptr_mLockedSpellOriginationCastID->value;
    }

    auto ptr_x898fbad4 = prop->cast_prop<yordle::data::prop::bool_prop>(2307898068u);
    if(ptr_x898fbad4 != nullptr) {
        x898fbad4 = ptr_x898fbad4->value;
    }

    auto ptr_mMinimapIconDisplayFlag = prop->cast_prop<yordle::data::prop::uint16_prop>(1053814478u);
    if(ptr_mMinimapIconDisplayFlag != nullptr) {
        mMinimapIconDisplayFlag = ptr_mMinimapIconDisplayFlag->value;
    }

    auto ptr_castRange = prop->cast_prop<yordle::data::prop::set_prop>(463256987u);
    if(ptr_castRange != nullptr) {
        auto index_castRange = 0;
        for(const auto &set_castRange_entry : ptr_castRange->value) {
            auto ptr_castRange_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_castRange_entry);
            if(ptr_castRange_entry != nullptr) {
                castRange[index_castRange] = ptr_castRange_entry->value;
            }
            index_castRange++;
        }
    }

    auto ptr_castRangeDisplayOverride = prop->cast_prop<yordle::data::prop::set_prop>(3569497011u);
    if(ptr_castRangeDisplayOverride != nullptr) {
        auto index_castRangeDisplayOverride = 0;
        for(const auto &set_castRangeDisplayOverride_entry : ptr_castRangeDisplayOverride->value) {
            auto ptr_castRangeDisplayOverride_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_castRangeDisplayOverride_entry);
            if(ptr_castRangeDisplayOverride_entry != nullptr) {
                castRangeDisplayOverride[index_castRangeDisplayOverride] = ptr_castRangeDisplayOverride_entry->value;
            }
            index_castRangeDisplayOverride++;
        }
    }

    auto ptr_castRadius = prop->cast_prop<yordle::data::prop::set_prop>(3072658204u);
    if(ptr_castRadius != nullptr) {
        auto index_castRadius = 0;
        for(const auto &set_castRadius_entry : ptr_castRadius->value) {
            auto ptr_castRadius_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_castRadius_entry);
            if(ptr_castRadius_entry != nullptr) {
                castRadius[index_castRadius] = ptr_castRadius_entry->value;
            }
            index_castRadius++;
        }
    }

    auto ptr_castRadiusSecondary = prop->cast_prop<yordle::data::prop::set_prop>(2406432998u);
    if(ptr_castRadiusSecondary != nullptr) {
        auto index_castRadiusSecondary = 0;
        for(const auto &set_castRadiusSecondary_entry : ptr_castRadiusSecondary->value) {
            auto ptr_castRadiusSecondary_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_castRadiusSecondary_entry);
            if(ptr_castRadiusSecondary_entry != nullptr) {
                castRadiusSecondary[index_castRadiusSecondary] = ptr_castRadiusSecondary_entry->value;
            }
            index_castRadiusSecondary++;
        }
    }

    auto ptr_castConeAngle = prop->cast_prop<yordle::data::prop::float32_prop>(2000202280u);
    if(ptr_castConeAngle != nullptr) {
        castConeAngle = ptr_castConeAngle->value;
    }

    auto ptr_castConeDistance = prop->cast_prop<yordle::data::prop::float32_prop>(1548149394u);
    if(ptr_castConeDistance != nullptr) {
        castConeDistance = ptr_castConeDistance->value;
    }

    auto ptr_castTargetAdditionalUnitsRadius = prop->cast_prop<yordle::data::prop::float32_prop>(1323940639u);
    if(ptr_castTargetAdditionalUnitsRadius != nullptr) {
        castTargetAdditionalUnitsRadius = ptr_castTargetAdditionalUnitsRadius->value;
    }

    auto ptr_luaOnMissileUpdateDistanceInterval = prop->cast_prop<yordle::data::prop::float32_prop>(2307656887u);
    if(ptr_luaOnMissileUpdateDistanceInterval != nullptr) {
        luaOnMissileUpdateDistanceInterval = ptr_luaOnMissileUpdateDistanceInterval->value;
    }

    auto ptr_mMissileSpec = prop->cast_prop<yordle::data::prop::structure_prop>(234317787u);
    if(ptr_mMissileSpec != nullptr) {
        mMissileSpec = yordle::data::meta::deserialize<yordle::data::meta::MissileSpecification>(ptr_mMissileSpec, 3221008892u);
    }

    auto ptr_mCastType = prop->cast_prop<yordle::data::prop::uint32_prop>(981403711u);
    if(ptr_mCastType != nullptr) {
        mCastType = ptr_mCastType->value;
    }

    auto ptr_castFrame = prop->cast_prop<yordle::data::prop::float32_prop>(1313281055u);
    if(ptr_castFrame != nullptr) {
        castFrame = ptr_castFrame->value;
    }

    auto ptr_missileSpeed = prop->cast_prop<yordle::data::prop::float32_prop>(375260702u);
    if(ptr_missileSpeed != nullptr) {
        missileSpeed = ptr_missileSpeed->value;
    }

    auto ptr_mMissileEffectKey = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(2319204568u);
    if(ptr_mMissileEffectKey != nullptr) {
        mMissileEffectKey = ptr_mMissileEffectKey->value;
    }

    auto ptr_mMissileEffectName = prop->cast_prop<yordle::data::prop::string_prop>(4099123210u);
    if(ptr_mMissileEffectName != nullptr) {
        mMissileEffectName = ptr_mMissileEffectName->value;
    }

    auto ptr_mMissileEffectPlayerKey = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(84065675u);
    if(ptr_mMissileEffectPlayerKey != nullptr) {
        mMissileEffectPlayerKey = ptr_mMissileEffectPlayerKey->value;
    }

    auto ptr_mMissileEffectPlayerName = prop->cast_prop<yordle::data::prop::string_prop>(2108197591u);
    if(ptr_mMissileEffectPlayerName != nullptr) {
        mMissileEffectPlayerName = ptr_mMissileEffectPlayerName->value;
    }

    auto ptr_mMissileEffectEnemyKey = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3737963574u);
    if(ptr_mMissileEffectEnemyKey != nullptr) {
        mMissileEffectEnemyKey = ptr_mMissileEffectEnemyKey->value;
    }

    auto ptr_mMissileEffectEnemyName = prop->cast_prop<yordle::data::prop::string_prop>(602797228u);
    if(ptr_mMissileEffectEnemyName != nullptr) {
        mMissileEffectEnemyName = ptr_mMissileEffectEnemyName->value;
    }

    auto ptr_mLineWidth = prop->cast_prop<yordle::data::prop::float32_prop>(438624862u);
    if(ptr_mLineWidth != nullptr) {
        mLineWidth = ptr_mLineWidth->value;
    }

    auto ptr_mLineDragLength = prop->cast_prop<yordle::data::prop::float32_prop>(3445030800u);
    if(ptr_mLineDragLength != nullptr) {
        mLineDragLength = ptr_mLineDragLength->value;
    }

    auto ptr_mLookAtPolicy = prop->cast_prop<yordle::data::prop::uint32_prop>(2492184944u);
    if(ptr_mLookAtPolicy != nullptr) {
        mLookAtPolicy = ptr_mLookAtPolicy->value;
    }

    auto ptr_mHitEffectOrientType = prop->cast_prop<yordle::data::prop::uint32_prop>(597649493u);
    if(ptr_mHitEffectOrientType != nullptr) {
        mHitEffectOrientType = ptr_mHitEffectOrientType->value;
    }

    auto ptr_mHitBoneName = prop->cast_prop<yordle::data::prop::string_prop>(1987442212u);
    if(ptr_mHitBoneName != nullptr) {
        mHitBoneName = ptr_mHitBoneName->value;
    }

    auto ptr_mHitEffectKey = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(2073816859u);
    if(ptr_mHitEffectKey != nullptr) {
        mHitEffectKey = ptr_mHitEffectKey->value;
    }

    auto ptr_mHitEffectName = prop->cast_prop<yordle::data::prop::string_prop>(3229736615u);
    if(ptr_mHitEffectName != nullptr) {
        mHitEffectName = ptr_mHitEffectName->value;
    }

    auto ptr_mHitEffectPlayerKey = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(1033543528u);
    if(ptr_mHitEffectPlayerKey != nullptr) {
        mHitEffectPlayerKey = ptr_mHitEffectPlayerKey->value;
    }

    auto ptr_mHitEffectPlayerName = prop->cast_prop<yordle::data::prop::string_prop>(3753364890u);
    if(ptr_mHitEffectPlayerName != nullptr) {
        mHitEffectPlayerName = ptr_mHitEffectPlayerName->value;
    }

    auto ptr_mAfterEffectKey = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3602710262u);
    if(ptr_mAfterEffectKey != nullptr) {
        mAfterEffectKey = ptr_mAfterEffectKey->value;
    }

    auto ptr_mAfterEffectName = prop->cast_prop<yordle::data::prop::string_prop>(2538046572u);
    if(ptr_mAfterEffectName != nullptr) {
        mAfterEffectName = ptr_mAfterEffectName->value;
    }

    auto ptr_mParticleStartOffset = prop->cast_prop<yordle::data::prop::vector_prop>(1769109117u);
    if(ptr_mParticleStartOffset != nullptr) {
        mParticleStartOffset = ptr_mParticleStartOffset->value;
    }

    auto ptr_mFloatVarsDecimals = prop->cast_prop<yordle::data::prop::set_prop>(439122960u);
    if(ptr_mFloatVarsDecimals != nullptr) {
        auto index_mFloatVarsDecimals = 0;
        for(const auto &set_mFloatVarsDecimals_entry : ptr_mFloatVarsDecimals->value) {
            auto ptr_mFloatVarsDecimals_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::int32_prop>(set_mFloatVarsDecimals_entry);
            if(ptr_mFloatVarsDecimals_entry != nullptr) {
                mFloatVarsDecimals[index_mFloatVarsDecimals] = ptr_mFloatVarsDecimals_entry->value;
            }
            index_mFloatVarsDecimals++;
        }
    }

    auto ptr_Mana = prop->cast_prop<yordle::data::prop::set_prop>(3650585354u);
    if(ptr_Mana != nullptr) {
        auto index_Mana = 0;
        for(const auto &set_Mana_entry : ptr_Mana->value) {
            auto ptr_Mana_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_Mana_entry);
            if(ptr_Mana_entry != nullptr) {
                Mana[index_Mana] = ptr_Mana_entry->value;
            }
            index_Mana++;
        }
    }

    auto ptr_manaUiOverride = prop->cast_prop<yordle::data::prop::set_prop>(3262238676u);
    if(ptr_manaUiOverride != nullptr) {
        auto index_manaUiOverride = 0;
        for(const auto &set_manaUiOverride_entry : ptr_manaUiOverride->value) {
            auto ptr_manaUiOverride_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_manaUiOverride_entry);
            if(ptr_manaUiOverride_entry != nullptr) {
                manaUiOverride[index_manaUiOverride] = ptr_manaUiOverride_entry->value;
            }
            index_manaUiOverride++;
        }
    }

    auto ptr_selectionPriority = prop->cast_prop<yordle::data::prop::uint32_prop>(2008676409u);
    if(ptr_selectionPriority != nullptr) {
        selectionPriority = ptr_selectionPriority->value;
    }

    auto ptr_mVOEventCategory = prop->cast_prop<yordle::data::prop::string_prop>(2105186057u);
    if(ptr_mVOEventCategory != nullptr) {
        mVOEventCategory = ptr_mVOEventCategory->value;
    }

    auto ptr_mAIData = prop->cast_prop<yordle::data::prop::inline_structure_prop>(3834433366u);
    if(ptr_mAIData != nullptr) {
        mAIData = yordle::data::meta::deserialize<yordle::data::meta::AISpellData>(ptr_mAIData, 4010062211u);
    }

    auto ptr_mSpellCooldownOrSealedQueueThreshold = prop->cast_prop<yordle::data::prop::optional_prop>(2085334492u);
    if(ptr_mSpellCooldownOrSealedQueueThreshold != nullptr) {
        auto ptr_mSpellCooldownOrSealedQueueThreshold_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(ptr_mSpellCooldownOrSealedQueueThreshold->value);
        if (ptr_mSpellCooldownOrSealedQueueThreshold_opt != nullptr) {
            mSpellCooldownOrSealedQueueThreshold = ptr_mSpellCooldownOrSealedQueueThreshold_opt->value;
        }
    }

    auto ptr_x3f432a6 = prop->cast_prop<yordle::data::prop::uint8_prop>(66335398u);
    if(ptr_x3f432a6 != nullptr) {
        x3f432a6 = ptr_x3f432a6->value;
    }

    auto ptr_mClientData = prop->cast_prop<yordle::data::prop::inline_structure_prop>(75847679u);
    if(ptr_mClientData != nullptr) {
        mClientData = yordle::data::meta::deserialize<yordle::data::meta::SpellDataResourceClient>(ptr_mClientData, 2110892290u);
    }

    auto ptr_xf7e5bc = prop->cast_prop<yordle::data::prop::bool_prop>(16246204u);
    if(ptr_xf7e5bc != nullptr) {
        xf7e5bc = ptr_xf7e5bc->value;
    }

    auto ptr_x39381720 = prop->cast_prop<yordle::data::prop::bool_prop>(959977248u);
    if(ptr_x39381720 != nullptr) {
        x39381720 = ptr_x39381720->value;
    }

    auto ptr_xa8eb09d1 = prop->cast_prop<yordle::data::prop::bool_prop>(2833975761u);
    if(ptr_xa8eb09d1 != nullptr) {
        xa8eb09d1 = ptr_xa8eb09d1->value;
    }

    auto ptr_x24b763c2 = prop->cast_prop<yordle::data::prop::bool_prop>(615998402u);
    if(ptr_x24b763c2 != nullptr) {
        x24b763c2 = ptr_x24b763c2->value;
    }

    auto ptr_mTargetingTypeData = prop->cast_prop<yordle::data::prop::structure_prop>(1564898895u);
    if(ptr_mTargetingTypeData != nullptr) {
        mTargetingTypeData = yordle::data::meta::deserialize<yordle::data::meta::TargetingTypeData>(ptr_mTargetingTypeData, 2144288560u);
    }

    auto ptr_x63060019 = prop->cast_prop<yordle::data::prop::reference_prop>(1661337625u);
    if(ptr_x63060019 != nullptr) {
        x63060019 = yordle::data::meta::bin_ref<yordle::data::meta::xefc7f35c>(4022858588u, ptr_x63060019->value);
    }

    auto ptr_mResourceResolvers = prop->cast_prop<yordle::data::prop::set_prop>(2460302967u);
    if(ptr_mResourceResolvers != nullptr) {
        for(const auto &set_mResourceResolvers_entry : ptr_mResourceResolvers->value) {
            auto ptr_mResourceResolvers_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_mResourceResolvers_entry);
            if(ptr_mResourceResolvers_entry != nullptr) {
                mResourceResolvers.emplace_back(ptr_mResourceResolvers_entry->value);
            }
        }
    }

    auto ptr_AudioBankPaths = prop->cast_prop<yordle::data::prop::set_prop>(991437061u);
    if(ptr_AudioBankPaths != nullptr) {
        for(const auto &set_AudioBankPaths_entry : ptr_AudioBankPaths->value) {
            auto ptr_AudioBankPaths_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_AudioBankPaths_entry);
            if(ptr_AudioBankPaths_entry != nullptr) {
                AudioBankPaths.emplace_back(ptr_AudioBankPaths_entry->value);
            }
        }
    }
}
