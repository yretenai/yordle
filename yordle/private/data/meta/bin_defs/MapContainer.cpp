/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#include <yordle/data/meta/bin_defs/MapContainer.hpp>

#include <yordle/data/meta/bin_defs/MapComponent.hpp>
#include <yordle/data/meta/bin_defs/MapPlaceableContainer.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/prop/empty_prop.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>
#include <yordle/data/prop/structure_prop.hpp>

yordle::data::meta::MapContainer::MapContainer(const std::shared_ptr<yordle::data::prop::structure_prop> &prop) : yordle::data::meta::bin_class(prop) {
    if(prop == nullptr) {
        return;
    }
    auto ptr_mapPath = prop->cast_prop<yordle::data::prop::string_prop>(3428745354u);
    if(ptr_mapPath != nullptr) {
        mapPath = ptr_mapPath->value;
    }

    auto ptr_components = prop->cast_prop<yordle::data::prop::set_prop>(469045609u);
    if(ptr_components != nullptr) {
        for(const auto &set_components_entry : ptr_components->value) {
            auto ptr_components_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::structure_prop>(set_components_entry);
            if(ptr_components_entry != nullptr) {
                components.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::MapComponent>(ptr_components_entry, 72326764u));
            }
        }
    }

    auto ptr_boundsMin = prop->cast_prop<yordle::data::prop::point_prop>(2973931428u);
    if(ptr_boundsMin != nullptr) {
        boundsMin = ptr_boundsMin->value;
    }

    auto ptr_boundsMax = prop->cast_prop<yordle::data::prop::point_prop>(3210098022u);
    if(ptr_boundsMax != nullptr) {
        boundsMax = ptr_boundsMax->value;
    }

    auto ptr_lowestWalkableHeight = prop->cast_prop<yordle::data::prop::float32_prop>(4016087337u);
    if(ptr_lowestWalkableHeight != nullptr) {
        lowestWalkableHeight = ptr_lowestWalkableHeight->value;
    }

    auto ptr_xf010defb = prop->cast_prop<yordle::data::prop::float32_prop>(4027637499u);
    if(ptr_xf010defb != nullptr) {
        xf010defb = ptr_xf010defb->value;
    }

    auto ptr_xd4edb891 = prop->cast_prop<yordle::data::prop::bool_prop>(3572349073u);
    if(ptr_xd4edb891 != nullptr) {
        xd4edb891 = ptr_xd4edb891->value;
    }

    auto ptr_chunks = prop->cast_prop<yordle::data::prop::map_prop>(1577983395u);
    if(ptr_chunks != nullptr) {
        for(const auto &set_chunks_pair : ptr_chunks->value) {
            auto ptr_chunks_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_chunks_pair.first);
            auto ptr_chunks_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::reference_prop>(set_chunks_pair.second);
            if(ptr_chunks_key != nullptr && ptr_chunks_value != nullptr) {
                chunks.emplace(ptr_chunks_key->value, yordle::data::meta::bin_ref<yordle::data::meta::MapPlaceableContainer>(2992376383u, ptr_chunks_value->value));
            }
        }
    }
}
