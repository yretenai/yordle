/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#include <yordle/data/meta/bin_defs/SkinCharacterDataProperties.hpp>

#include <yordle/data/meta/bin_defs/SkinUpgradeData.hpp>
#include <yordle/data/meta/bin_defs/CensoredImage.hpp>
#include <yordle/data/meta/bin_defs/SkinAudioProperties.hpp>
#include <yordle/data/meta/bin_defs/SkinAnimationProperties.hpp>
#include <yordle/data/meta/bin_defs/SkinMeshDataProperties.hpp>
#include <yordle/data/meta/bin_defs/xf71d1d27.hpp>
#include <yordle/data/meta/bin_defs/SkinCharacterDataProperties_CharacterIdleEffect.hpp>
#include <yordle/data/meta/bin_defs/CharacterHealthBarDataRecord.hpp>
#include <yordle/data/meta/bin_defs/SkinEmblem.hpp>
#include <yordle/data/meta/bin_defs/ISecondaryResourceDisplayData.hpp>
#include <yordle/data/meta/bin_defs/ContextualActionData.hpp>
#include <yordle/data/meta/bin_defs/ResourceResolver.hpp>
#include <yordle/data/meta/bin_defs/HudOptionalBinData.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/prop/empty_prop.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>
#include <yordle/data/prop/structure_prop.hpp>

yordle::data::meta::SkinCharacterDataProperties::SkinCharacterDataProperties(const std::shared_ptr<yordle::data::prop::structure_prop> &prop) : yordle::data::meta::bin_class(prop) {
    if(prop == nullptr) {
        return;
    }
    auto ptr_skinClassification = prop->cast_prop<yordle::data::prop::uint32_prop>(2267175040u);
    if(ptr_skinClassification != nullptr) {
        skinClassification = ptr_skinClassification->value;
    }

    auto ptr_championSkinName = prop->cast_prop<yordle::data::prop::string_prop>(762889000u);
    if(ptr_championSkinName != nullptr) {
        championSkinName = ptr_championSkinName->value;
    }

    auto ptr_attributeFlags = prop->cast_prop<yordle::data::prop::uint32_prop>(1282656454u);
    if(ptr_attributeFlags != nullptr) {
        attributeFlags = ptr_attributeFlags->value;
    }

    auto ptr_skinParent = prop->cast_prop<yordle::data::prop::int32_prop>(1363876936u);
    if(ptr_skinParent != nullptr) {
        skinParent = ptr_skinParent->value;
    }

    auto ptr_metaDataTags = prop->cast_prop<yordle::data::prop::string_prop>(2476636969u);
    if(ptr_metaDataTags != nullptr) {
        metaDataTags = ptr_metaDataTags->value;
    }

    auto ptr_emoteLoadout = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(4042761877u);
    if(ptr_emoteLoadout != nullptr) {
        emoteLoadout = ptr_emoteLoadout->value;
    }

    auto ptr_SkinUpgradeData = prop->cast_prop<yordle::data::prop::inline_structure_prop>(1760736924u);
    if(ptr_SkinUpgradeData != nullptr) {
        SkinUpgradeData = yordle::data::meta::deserialize<yordle::data::meta::SkinUpgradeData>(ptr_SkinUpgradeData, 1760736924u);
    }

    auto ptr_endOfGameAlias = prop->cast_prop<yordle::data::prop::string_prop>(741440203u);
    if(ptr_endOfGameAlias != nullptr) {
        endOfGameAlias = ptr_endOfGameAlias->value;
    }

    auto ptr_x4678b8f7 = prop->cast_prop<yordle::data::prop::string_prop>(1182316791u);
    if(ptr_x4678b8f7 != nullptr) {
        x4678b8f7 = ptr_x4678b8f7->value;
    }

    auto ptr_loadscreen = prop->cast_prop<yordle::data::prop::inline_structure_prop>(2549553293u);
    if(ptr_loadscreen != nullptr) {
        loadscreen = yordle::data::meta::deserialize<yordle::data::meta::CensoredImage>(ptr_loadscreen, 3496109055u);
    }

    auto ptr_loadscreenVintage = prop->cast_prop<yordle::data::prop::inline_structure_prop>(3163484077u);
    if(ptr_loadscreenVintage != nullptr) {
        loadscreenVintage = yordle::data::meta::deserialize<yordle::data::meta::CensoredImage>(ptr_loadscreenVintage, 3496109055u);
    }

    auto ptr_SkinAudioProperties = prop->cast_prop<yordle::data::prop::inline_structure_prop>(2407209295u);
    if(ptr_SkinAudioProperties != nullptr) {
        SkinAudioProperties = yordle::data::meta::deserialize<yordle::data::meta::SkinAudioProperties>(ptr_SkinAudioProperties, 2407209295u);
    }

    auto ptr_SkinAnimationProperties = prop->cast_prop<yordle::data::prop::inline_structure_prop>(1114474915u);
    if(ptr_SkinAnimationProperties != nullptr) {
        SkinAnimationProperties = yordle::data::meta::deserialize<yordle::data::meta::SkinAnimationProperties>(ptr_SkinAnimationProperties, 1114474915u);
    }

    auto ptr_skinMeshProperties = prop->cast_prop<yordle::data::prop::inline_structure_prop>(1174362372u);
    if(ptr_skinMeshProperties != nullptr) {
        skinMeshProperties = yordle::data::meta::deserialize<yordle::data::meta::SkinMeshDataProperties>(ptr_skinMeshProperties, 1628559524u);
    }

    auto ptr_xf71d1d27 = prop->cast_prop<yordle::data::prop::inline_structure_prop>(4145880359u);
    if(ptr_xf71d1d27 != nullptr) {
        xf71d1d27 = yordle::data::meta::deserialize<yordle::data::meta::xf71d1d27>(ptr_xf71d1d27, 4145880359u);
    }

    auto ptr_armorMaterial = prop->cast_prop<yordle::data::prop::string_prop>(755834653u);
    if(ptr_armorMaterial != nullptr) {
        armorMaterial = ptr_armorMaterial->value;
    }

    auto ptr_themeMusic = prop->cast_prop<yordle::data::prop::set_prop>(1403862017u);
    if(ptr_themeMusic != nullptr) {
        for(const auto &set_themeMusic_entry : ptr_themeMusic->value) {
            auto ptr_themeMusic_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_themeMusic_entry);
            if(ptr_themeMusic_entry != nullptr) {
                themeMusic.emplace_back(ptr_themeMusic_entry->value);
            }
        }
    }

    auto ptr_x592970c = prop->cast_prop<yordle::data::prop::bool_prop>(93493004u);
    if(ptr_x592970c != nullptr) {
        x592970c = ptr_x592970c->value;
    }

    auto ptr_HudMuteEvent = prop->cast_prop<yordle::data::prop::string_prop>(577901301u);
    if(ptr_HudMuteEvent != nullptr) {
        HudMuteEvent = ptr_HudMuteEvent->value;
    }

    auto ptr_HudUnmuteEvent = prop->cast_prop<yordle::data::prop::string_prop>(1073641932u);
    if(ptr_HudUnmuteEvent != nullptr) {
        HudUnmuteEvent = ptr_HudUnmuteEvent->value;
    }

    auto ptr_defaultAnimations = prop->cast_prop<yordle::data::prop::set_prop>(305370093u);
    if(ptr_defaultAnimations != nullptr) {
        for(const auto &set_defaultAnimations_entry : ptr_defaultAnimations->value) {
            auto ptr_defaultAnimations_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_defaultAnimations_entry);
            if(ptr_defaultAnimations_entry != nullptr) {
                defaultAnimations.emplace_back(ptr_defaultAnimations_entry->value);
            }
        }
    }

    auto ptr_idleParticlesEffects = prop->cast_prop<yordle::data::prop::set_prop>(2216193852u);
    if(ptr_idleParticlesEffects != nullptr) {
        for(const auto &set_idleParticlesEffects_entry : ptr_idleParticlesEffects->value) {
            auto ptr_idleParticlesEffects_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_idleParticlesEffects_entry);
            if(ptr_idleParticlesEffects_entry != nullptr) {
                idleParticlesEffects.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::SkinCharacterDataProperties_CharacterIdleEffect>(ptr_idleParticlesEffects_entry, 856064357u));
            }
        }
    }

    auto ptr_particleOverride_ChampionKillDeathParticle = prop->cast_prop<yordle::data::prop::string_prop>(455964165u);
    if(ptr_particleOverride_ChampionKillDeathParticle != nullptr) {
        particleOverride_ChampionKillDeathParticle = ptr_particleOverride_ChampionKillDeathParticle->value;
    }

    auto ptr_particleOverride_DeathParticle = prop->cast_prop<yordle::data::prop::string_prop>(4119314700u);
    if(ptr_particleOverride_DeathParticle != nullptr) {
        particleOverride_DeathParticle = ptr_particleOverride_DeathParticle->value;
    }

    auto ptr_mSpawnParticleName = prop->cast_prop<yordle::data::prop::string_prop>(3089770946u);
    if(ptr_mSpawnParticleName != nullptr) {
        mSpawnParticleName = ptr_mSpawnParticleName->value;
    }

    auto ptr_extraCharacterPreloads = prop->cast_prop<yordle::data::prop::set_prop>(1712098126u);
    if(ptr_extraCharacterPreloads != nullptr) {
        for(const auto &set_extraCharacterPreloads_entry : ptr_extraCharacterPreloads->value) {
            auto ptr_extraCharacterPreloads_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_extraCharacterPreloads_entry);
            if(ptr_extraCharacterPreloads_entry != nullptr) {
                extraCharacterPreloads.emplace_back(ptr_extraCharacterPreloads_entry->value);
            }
        }
    }

    auto ptr_healthBarData = prop->cast_prop<yordle::data::prop::inline_structure_prop>(1372076792u);
    if(ptr_healthBarData != nullptr) {
        healthBarData = yordle::data::meta::deserialize<yordle::data::meta::CharacterHealthBarDataRecord>(ptr_healthBarData, 297212766u);
    }

    auto ptr_mEmblems = prop->cast_prop<yordle::data::prop::set_prop>(3063479079u);
    if(ptr_mEmblems != nullptr) {
        for(const auto &set_mEmblems_entry : ptr_mEmblems->value) {
            auto ptr_mEmblems_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mEmblems_entry);
            if(ptr_mEmblems_entry != nullptr) {
                mEmblems.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::SkinEmblem>(ptr_mEmblems_entry, 2074733870u));
            }
        }
    }

    auto ptr_voiceOverOverride = prop->cast_prop<yordle::data::prop::string_prop>(1998811699u);
    if(ptr_voiceOverOverride != nullptr) {
        voiceOverOverride = ptr_voiceOverOverride->value;
    }

    auto ptr_skipVOOverride = prop->cast_prop<yordle::data::prop::bool_prop>(344277337u);
    if(ptr_skipVOOverride != nullptr) {
        skipVOOverride = ptr_skipVOOverride->value;
    }

    auto ptr_iconAvatar = prop->cast_prop<yordle::data::prop::string_prop>(144375657u);
    if(ptr_iconAvatar != nullptr) {
        iconAvatar = ptr_iconAvatar->value;
    }

    auto ptr_iconCircleScale = prop->cast_prop<yordle::data::prop::optional_prop>(605984622u);
    if(ptr_iconCircleScale != nullptr) {
        auto ptr_iconCircleScale_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(ptr_iconCircleScale->value);
        if (ptr_iconCircleScale_opt != nullptr) {
            iconCircleScale = ptr_iconCircleScale_opt->value;
        }
    }

    auto ptr_iconCircle = prop->cast_prop<yordle::data::prop::optional_prop>(3866264820u);
    if(ptr_iconCircle != nullptr) {
        auto ptr_iconCircle_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(ptr_iconCircle->value);
        if (ptr_iconCircle_opt != nullptr) {
            iconCircle = ptr_iconCircle_opt->value;
        }
    }

    auto ptr_iconSquare = prop->cast_prop<yordle::data::prop::optional_prop>(2890350575u);
    if(ptr_iconSquare != nullptr) {
        auto ptr_iconSquare_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(ptr_iconSquare->value);
        if (ptr_iconSquare_opt != nullptr) {
            iconSquare = ptr_iconSquare_opt->value;
        }
    }

    auto ptr_alternateIconsCircle = prop->cast_prop<yordle::data::prop::set_prop>(1015343349u);
    if(ptr_alternateIconsCircle != nullptr) {
        for(const auto &set_alternateIconsCircle_entry : ptr_alternateIconsCircle->value) {
            auto ptr_alternateIconsCircle_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_alternateIconsCircle_entry);
            if(ptr_alternateIconsCircle_entry != nullptr) {
                alternateIconsCircle.emplace_back(ptr_alternateIconsCircle_entry->value);
            }
        }
    }

    auto ptr_alternateIconsSquare = prop->cast_prop<yordle::data::prop::set_prop>(3006356098u);
    if(ptr_alternateIconsSquare != nullptr) {
        for(const auto &set_alternateIconsSquare_entry : ptr_alternateIconsSquare->value) {
            auto ptr_alternateIconsSquare_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_alternateIconsSquare_entry);
            if(ptr_alternateIconsSquare_entry != nullptr) {
                alternateIconsSquare.emplace_back(ptr_alternateIconsSquare_entry->value);
            }
        }
    }

    auto ptr_uncensoredIconCircles = prop->cast_prop<yordle::data::prop::map_prop>(2363509821u);
    if(ptr_uncensoredIconCircles != nullptr) {
        for(const auto &set_uncensoredIconCircles_pair : ptr_uncensoredIconCircles->value) {
            auto ptr_uncensoredIconCircles_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_uncensoredIconCircles_pair.first);
            auto ptr_uncensoredIconCircles_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_uncensoredIconCircles_pair.second);
            if(ptr_uncensoredIconCircles_key != nullptr && ptr_uncensoredIconCircles_value != nullptr) {
                uncensoredIconCircles.emplace(ptr_uncensoredIconCircles_key->value, ptr_uncensoredIconCircles_value->value);
            }
        }
    }

    auto ptr_uncensoredIconSquares = prop->cast_prop<yordle::data::prop::map_prop>(2784061420u);
    if(ptr_uncensoredIconSquares != nullptr) {
        for(const auto &set_uncensoredIconSquares_pair : ptr_uncensoredIconSquares->value) {
            auto ptr_uncensoredIconSquares_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_uncensoredIconSquares_pair.first);
            auto ptr_uncensoredIconSquares_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_uncensoredIconSquares_pair.second);
            if(ptr_uncensoredIconSquares_key != nullptr && ptr_uncensoredIconSquares_value != nullptr) {
                uncensoredIconSquares.emplace(ptr_uncensoredIconSquares_key->value, ptr_uncensoredIconSquares_value->value);
            }
        }
    }

    auto ptr_secondaryResourceHudDisplayData = prop->cast_prop<yordle::data::prop::structure_prop>(3828461976u);
    if(ptr_secondaryResourceHudDisplayData != nullptr) {
        secondaryResourceHudDisplayData = yordle::data::meta::deserialize<yordle::data::meta::ISecondaryResourceDisplayData>(ptr_secondaryResourceHudDisplayData, 1239842284u);
    }

    auto ptr_mContextualActionData = prop->cast_prop<yordle::data::prop::reference_prop>(3640019469u);
    if(ptr_mContextualActionData != nullptr) {
        mContextualActionData = yordle::data::meta::bin_ref<yordle::data::meta::ContextualActionData>(3476110372u, ptr_mContextualActionData->value);
    }

    auto ptr_emoteBuffbone = prop->cast_prop<yordle::data::prop::string_prop>(691038296u);
    if(ptr_emoteBuffbone != nullptr) {
        emoteBuffbone = ptr_emoteBuffbone->value;
    }

    auto ptr_emoteYOffset = prop->cast_prop<yordle::data::prop::float32_prop>(3898782585u);
    if(ptr_emoteYOffset != nullptr) {
        emoteYOffset = ptr_emoteYOffset->value;
    }

    auto ptr_godrayFXbone = prop->cast_prop<yordle::data::prop::string_prop>(1594442579u);
    if(ptr_godrayFXbone != nullptr) {
        godrayFXbone = ptr_godrayFXbone->value;
    }

    auto ptr_mResourceResolver = prop->cast_prop<yordle::data::prop::reference_prop>(1646816894u);
    if(ptr_mResourceResolver != nullptr) {
        mResourceResolver = yordle::data::meta::bin_ref<yordle::data::meta::ResourceResolver>(4013559603u, ptr_mResourceResolver->value);
    }

    auto ptr_mAdditionalResourceResolvers = prop->cast_prop<yordle::data::prop::set_prop>(2188533552u);
    if(ptr_mAdditionalResourceResolvers != nullptr) {
        for(const auto &set_mAdditionalResourceResolvers_entry : ptr_mAdditionalResourceResolvers->value) {
            auto ptr_mAdditionalResourceResolvers_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::reference_prop>(set_mAdditionalResourceResolvers_entry);
            if(ptr_mAdditionalResourceResolvers_entry != nullptr) {
                mAdditionalResourceResolvers.emplace_back(yordle::data::meta::bin_ref<yordle::data::meta::ResourceResolver>(4013559603u, ptr_mAdditionalResourceResolvers_entry->value));
            }
        }
    }

    auto ptr_mOptionalBin = prop->cast_prop<yordle::data::prop::inline_structure_prop>(355435693u);
    if(ptr_mOptionalBin != nullptr) {
        mOptionalBin = yordle::data::meta::deserialize<yordle::data::meta::HudOptionalBinData>(ptr_mOptionalBin, 3920544379u);
    }

    auto ptr_x25f9aa72 = prop->cast_prop<yordle::data::prop::uint32_prop>(637119090u);
    if(ptr_x25f9aa72 != nullptr) {
        x25f9aa72 = ptr_x25f9aa72->value;
    }
}
