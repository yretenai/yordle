/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#include <yordle/data/meta/bin_defs/x9205b275.hpp>

#include <yordle/data/meta/bin_defs/xef05ba42.hpp>
#include <yordle/data/prop/empty_prop.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>
#include <yordle/data/prop/structure_prop.hpp>

yordle::data::meta::x9205b275::x9205b275(const std::shared_ptr<yordle::data::prop::structure_prop> &prop) : yordle::data::meta::xef05ba42(prop) {
    if(prop == nullptr) {
        return;
    }
    auto ptr_CardDefault = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(2208006024u);
    if(ptr_CardDefault != nullptr) {
        CardDefault = ptr_CardDefault->value;
    }

    auto ptr_CardHoverMythic = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(558396809u);
    if(ptr_CardHoverMythic != nullptr) {
        CardHoverMythic = ptr_CardHoverMythic->value;
    }

    auto ptr_CardHoverNonMythic = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(1260157044u);
    if(ptr_CardHoverNonMythic != nullptr) {
        CardHoverNonMythic = ptr_CardHoverNonMythic->value;
    }

    auto ptr_CardSelectedMythic = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(2862131044u);
    if(ptr_CardSelectedMythic != nullptr) {
        CardSelectedMythic = ptr_CardSelectedMythic->value;
    }

    auto ptr_CardSelectedNonMythic = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(1210894143u);
    if(ptr_CardSelectedNonMythic != nullptr) {
        CardSelectedNonMythic = ptr_CardSelectedNonMythic->value;
    }

    auto ptr_BriefText = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(1482017448u);
    if(ptr_BriefText != nullptr) {
        BriefText = ptr_BriefText->value;
    }

    auto ptr_BriefTextBackdrop = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(236594122u);
    if(ptr_BriefTextBackdrop != nullptr) {
        BriefTextBackdrop = ptr_BriefTextBackdrop->value;
    }

    auto ptr_AdviceIconDefault = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3315268305u);
    if(ptr_AdviceIconDefault != nullptr) {
        AdviceIconDefault = ptr_AdviceIconDefault->value;
    }

    auto ptr_x9c2a9d4 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(163752404u);
    if(ptr_x9c2a9d4 != nullptr) {
        x9c2a9d4 = ptr_x9c2a9d4->value;
    }

    auto ptr_xc68c22cf = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3331072719u);
    if(ptr_xc68c22cf != nullptr) {
        xc68c22cf = ptr_xc68c22cf->value;
    }

    auto ptr_AdviceLabel = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(334720249u);
    if(ptr_AdviceLabel != nullptr) {
        AdviceLabel = ptr_AdviceLabel->value;
    }

    auto ptr_AdviceCharIcon0 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(4107456060u);
    if(ptr_AdviceCharIcon0 != nullptr) {
        AdviceCharIcon0 = ptr_AdviceCharIcon0->value;
    }

    auto ptr_AdviceCharIcon1 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(4124233679u);
    if(ptr_AdviceCharIcon1 != nullptr) {
        AdviceCharIcon1 = ptr_AdviceCharIcon1->value;
    }

    auto ptr_CardHoverNonMythicVfx = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(189591720u);
    if(ptr_CardHoverNonMythicVfx != nullptr) {
        CardHoverNonMythicVfx = ptr_CardHoverNonMythicVfx->value;
    }

    auto ptr_CardHoverMythicVfx = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(2061681547u);
    if(ptr_CardHoverMythicVfx != nullptr) {
        CardHoverMythicVfx = ptr_CardHoverMythicVfx->value;
    }

    auto ptr_CardRefreshMythicVfx = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(4072014996u);
    if(ptr_CardRefreshMythicVfx != nullptr) {
        CardRefreshMythicVfx = ptr_CardRefreshMythicVfx->value;
    }

    auto ptr_CardRefreshNonMythicVfx = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(805495209u);
    if(ptr_CardRefreshNonMythicVfx != nullptr) {
        CardRefreshNonMythicVfx = ptr_CardRefreshNonMythicVfx->value;
    }

    auto ptr_CardSelectedMythicVfx = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3780699960u);
    if(ptr_CardSelectedMythicVfx != nullptr) {
        CardSelectedMythicVfx = ptr_CardSelectedMythicVfx->value;
    }

    auto ptr_CardSelectedNonMythicVfx = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3508721437u);
    if(ptr_CardSelectedNonMythicVfx != nullptr) {
        CardSelectedNonMythicVfx = ptr_CardSelectedNonMythicVfx->value;
    }

    auto ptr_AdviceEmptyIconDefault = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(2932130656u);
    if(ptr_AdviceEmptyIconDefault != nullptr) {
        AdviceEmptyIconDefault = ptr_AdviceEmptyIconDefault->value;
    }

    auto ptr_x59fbbd19 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(1509670169u);
    if(ptr_x59fbbd19 != nullptr) {
        x59fbbd19 = ptr_x59fbbd19->value;
    }

    auto ptr_x9566584e = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(2506512462u);
    if(ptr_x9566584e != nullptr) {
        x9566584e = ptr_x9566584e->value;
    }

    auto ptr_AdviceEmptyText = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3919620081u);
    if(ptr_AdviceEmptyText != nullptr) {
        AdviceEmptyText = ptr_AdviceEmptyText->value;
    }

    auto ptr_AdviceEmptyTextHover = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(801390377u);
    if(ptr_AdviceEmptyTextHover != nullptr) {
        AdviceEmptyTextHover = ptr_AdviceEmptyTextHover->value;
    }

    auto ptr_AdviceCharBorder0 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3347880489u);
    if(ptr_AdviceCharBorder0 != nullptr) {
        AdviceCharBorder0 = ptr_AdviceCharBorder0->value;
    }

    auto ptr_AdviceCharBorderHover0 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(991943513u);
    if(ptr_AdviceCharBorderHover0 != nullptr) {
        AdviceCharBorderHover0 = ptr_AdviceCharBorderHover0->value;
    }

    auto ptr_AdviceCharBorder1 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3331102870u);
    if(ptr_AdviceCharBorder1 != nullptr) {
        AdviceCharBorder1 = ptr_AdviceCharBorder1->value;
    }

    auto ptr_AdviceCharBorderHover1 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(975165894u);
    if(ptr_AdviceCharBorderHover1 != nullptr) {
        AdviceCharBorderHover1 = ptr_AdviceCharBorderHover1->value;
    }

    auto ptr_x11bbbba9 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(297515945u);
    if(ptr_x11bbbba9 != nullptr) {
        x11bbbba9 = ptr_x11bbbba9->value;
    }

    auto ptr_xfb061739 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(4211480377u);
    if(ptr_xfb061739 != nullptr) {
        xfb061739 = ptr_xfb061739->value;
    }

    auto ptr_xfc53db08 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(4233353992u);
    if(ptr_xfc53db08 != nullptr) {
        xfc53db08 = ptr_xfc53db08->value;
    }

    auto ptr_x9057e20c = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(2421678604u);
    if(ptr_x9057e20c != nullptr) {
        x9057e20c = ptr_x9057e20c->value;
    }

    auto ptr_BundleItemFrameIcon = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(1893937750u);
    if(ptr_BundleItemFrameIcon != nullptr) {
        BundleItemFrameIcon = ptr_BundleItemFrameIcon->value;
    }

    auto ptr_BundleItemFrameHoverIcon = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(1575857030u);
    if(ptr_BundleItemFrameHoverIcon != nullptr) {
        BundleItemFrameHoverIcon = ptr_BundleItemFrameHoverIcon->value;
    }

    auto ptr_xd05802ad = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3495428781u);
    if(ptr_xd05802ad != nullptr) {
        xd05802ad = ptr_xd05802ad->value;
    }

    auto ptr_x2435e125 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(607510821u);
    if(ptr_x2435e125 != nullptr) {
        x2435e125 = ptr_x2435e125->value;
    }

    auto ptr_x75ef6ce0 = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(1978625248u);
    if(ptr_x75ef6ce0 != nullptr) {
        x75ef6ce0 = ptr_x75ef6ce0->value;
    }
}
