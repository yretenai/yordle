/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_X3DSharedData
#pragma once

#include <memory>
#include <vector>

#include <yordle/data/meta/bin_defs/X3DSharedConstantBufferDef.hpp>
#include <yordle/data/meta/bin_defs/X3DSharedTextureDef.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
#ifndef YORDLE_META_DEF_X3DSharedConstantBufferDef
    struct X3DSharedConstantBufferDef;
#endif

#ifndef YORDLE_META_DEF_X3DSharedTextureDef
    struct X3DSharedTextureDef;
#endif
    struct YORDLE_EXPORT X3DSharedData : public bin_class {
        explicit X3DSharedData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 877304437u;
        }

        std::vector<yordle::data::meta::bin_ref<yordle::data::meta::X3DSharedConstantBufferDef>> constantBuffers {};
        std::vector<std::shared_ptr<yordle::data::meta::X3DSharedTextureDef>> textures {};
    };
}
#define YORDLE_META_DEF_X3DSharedData
#endif
