/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_AlternateSpellAssets
#pragma once

#include <memory>
#include <string>
#include <cstdint>

#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
    struct YORDLE_EXPORT AlternateSpellAssets : public bin_class {
        explicit AlternateSpellAssets(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 609301268u;
        }

        std::string mAnimationName {};
        std::string mAnimationLoopName {};
        std::string mAnimationWinddownName {};
        std::string mAnimationLeadOutName {};
        bool mUseAnimatorFramerate = false;
        uint32_t mHitEffectOrientType = 0u;
        bool mHaveHitEffect = false;
        bool mHaveHitBone = false;
        std::string mHitBoneName {};
        yordle::data::meta::bin_fnv_hash mHitEffectKey = 0u;
        std::string mHitEffectName {};
        yordle::data::meta::bin_fnv_hash mHitEffectPlayerKey = 0u;
        std::string mHitEffectPlayerName {};
        yordle::data::meta::bin_fnv_hash mAfterEffectKey = 0u;
        std::string mAfterEffectName {};
    };
}
#define YORDLE_META_DEF_AlternateSpellAssets
#endif
