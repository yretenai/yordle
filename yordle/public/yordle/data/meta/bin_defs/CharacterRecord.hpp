/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_CharacterRecord
#pragma once

#include <memory>
#include <string>
#include <cstdint>
#include <vector>
#include <optional>
#include <array>
#include <map>

#include <yordle/data/meta/bin_defs/PerkStyle.hpp>
#include <yordle/data/meta/bin_defs/PerkReplacementList.hpp>
#include <yordle/data/meta/bin_defs/AbilityResourceSlotInfo.hpp>
#include <yordle/data/meta/bin_defs/x4bb004c1.hpp>
#include <yordle/data/meta/bin_defs/AttackSlotData.hpp>
#include <yordle/data/meta/bin_defs/SpellLevelUpInfo.hpp>
#include <yordle/data/meta/bin_defs/RecSpellRankUpInfo.hpp>
#include <yordle/data/meta/bin_defs/TargetLaserComponentEffects.hpp>
#include <yordle/data/meta/bin_defs/xd60f170b.hpp>
#include <yordle/data/meta/bin_defs/EvolutionDescription.hpp>
#include <yordle/data/meta/bin_defs/UseableData.hpp>
#include <yordle/data/meta/bin_defs/ToolEducationData.hpp>
#include <yordle/data/meta/bin_defs/CharacterToolData.hpp>
#include <yordle/data/meta/bin_defs/AbilityObject.hpp>
#include <yordle/data/meta/bin_defs/IGameCalculation.hpp>
#include <yordle/data/meta/bin_defs/SpellObject.hpp>
#include <yordle/data/meta/bin_defs/CharacterPassiveData.hpp>
#include <yordle/data/meta/bin_defs/StatFormulaDataList.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
#ifndef YORDLE_META_DEF_PerkStyle
    struct PerkStyle;
#endif

#ifndef YORDLE_META_DEF_PerkReplacementList
    struct PerkReplacementList;
#endif

#ifndef YORDLE_META_DEF_AbilityResourceSlotInfo
    struct AbilityResourceSlotInfo;
#endif

#ifndef YORDLE_META_DEF_x4bb004c1
    struct x4bb004c1;
#endif

#ifndef YORDLE_META_DEF_AttackSlotData
    struct AttackSlotData;
#endif

#ifndef YORDLE_META_DEF_SpellLevelUpInfo
    struct SpellLevelUpInfo;
#endif

#ifndef YORDLE_META_DEF_RecSpellRankUpInfo
    struct RecSpellRankUpInfo;
#endif

#ifndef YORDLE_META_DEF_TargetLaserComponentEffects
    struct TargetLaserComponentEffects;
#endif

#ifndef YORDLE_META_DEF_xd60f170b
    struct xd60f170b;
#endif

#ifndef YORDLE_META_DEF_EvolutionDescription
    struct EvolutionDescription;
#endif

#ifndef YORDLE_META_DEF_UseableData
    struct UseableData;
#endif

#ifndef YORDLE_META_DEF_ToolEducationData
    struct ToolEducationData;
#endif

#ifndef YORDLE_META_DEF_CharacterToolData
    struct CharacterToolData;
#endif

#ifndef YORDLE_META_DEF_AbilityObject
    struct AbilityObject;
#endif

#ifndef YORDLE_META_DEF_IGameCalculation
    struct IGameCalculation;
#endif

#ifndef YORDLE_META_DEF_SpellObject
    struct SpellObject;
#endif

#ifndef YORDLE_META_DEF_CharacterPassiveData
    struct CharacterPassiveData;
#endif

#ifndef YORDLE_META_DEF_StatFormulaDataList
    struct StatFormulaDataList;
#endif
    struct YORDLE_EXPORT CharacterRecord : public bin_class {
        explicit CharacterRecord(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 602544405u;
        }

        std::string mCharacterName {};
        std::string mFallbackCharacterName {};
        uint32_t flags = 8398080u;
        uint32_t minionFlags = 0u;
        std::string assetCategory = "character";
        std::vector<yordle::data::meta::bin_fnv_hash> purchaseIdentities {};
        std::vector<yordle::data::meta::bin_fnv_hash> mClientSideItemInventory {};
        yordle::data::meta::bin_ref<yordle::data::meta::PerkStyle> mPreferredPerkStyle { 240569694 };
        std::shared_ptr<yordle::data::meta::PerkReplacementList> mPerkReplacements {};
        float baseHP = 100.0f;
        float hpPerLevel = 0.0f;
        float baseStaticHPRegen = 1.0f;
        float baseFactorHPRegen = 0.0f;
        float hpRegenPerLevel = 0.0f;
        float healthBarHeight = 100.0f;
        bool healthBarFullParallax = false;
        std::string selfChampSpecificHealthSuffix {};
        std::string selfCBChampSpecificHealthSuffix {};
        std::string allyChampSpecificHealthSuffix {};
        std::string enemyChampSpecificHealthSuffix {};
        bool highlightHealthbarIcons = false;
        std::shared_ptr<yordle::data::meta::AbilityResourceSlotInfo> primaryAbilityResource {};
        std::shared_ptr<yordle::data::meta::AbilityResourceSlotInfo> secondaryAbilityResource {};
        float BaseDamage = 10.0f;
        float damagePerLevel = 0.0f;
        float baseArmor = 1.0f;
        float armorPerLevel = 0.0f;
        float baseSpellBlock = 0.0f;
        float spellBlockPerLevel = 0.0f;
        float baseDodge = 0.0f;
        float DodgePerLevel = 0.0f;
        float baseMissChance = 0.0f;
        float baseCritChance = 0.0f;
        float critPerLevel = 0.0f;
        float critDamageMultiplier = 1.75f;
        float baseMoveSpeed = 100.0f;
        float xcb4451d3 = 0.0f;
        float attackRange = 100.0f;
        float AttackSpeed = 0.0f;
        float attackSpeedRatio = 1.0f;
        float attackSpeedPerLevel = 0.0f;
        float AbilityPowerIncPerLevel = 0.0f;
        float mAdaptiveForceToAbilityPowerWeight = 0.0f;
        std::shared_ptr<yordle::data::meta::x4bb004c1> x4bb004c1 {};
        std::shared_ptr<yordle::data::meta::AttackSlotData> basicAttack {};
        std::vector<std::shared_ptr<yordle::data::meta::AttackSlotData>> ExtraAttacks {};
        std::vector<std::shared_ptr<yordle::data::meta::AttackSlotData>> critAttacks {};
        float acquisitionRange = 750.0f;
        std::optional<float> wakeUpRange {};
        std::optional<float> firstAcquisitionRange {};
        float attackAutoInterruptPercent = 0.20000000298023224f;
        float towerTargetingPriorityBoost = 0.0f;
        float goldGivenOnDeath = 25.0f;
        float expGivenOnDeath = 48.0f;
        float goldRadius = 0.0f;
        float experienceRadius = 0.0f;
        float deathEventListeningRadius = 1000.0f;
        float localGoldGivenOnDeath = 0.0f;
        float localExpGivenOnDeath = 0.0f;
        bool localGoldSplitWithLastHitter = false;
        float globalGoldGivenOnDeath = 0.0f;
        float globalExpGivenOnDeath = 0.0f;
        std::optional<float> perceptionBubbleRadius {};
        std::optional<std::array<float, 3>> perceptionBoundingBoxSize {};
        float significance = 0.0f;
        float untargetableSpawnTime = 0.0f;
        float abilityPower = 0.0f;
        float deathTime = -1.0f;
        float occludedUnitSelectableDistance = 0.0f;
        std::string criticalAttack = "BaseSpell";
        std::string passiveName = "Passive";
        std::string passiveLuaName = "Passive";
        std::string passiveToolTip = "Desc";
        std::string passiveSpell {};
        float passiveRange = 0.0f;
        std::string passive1IconName {};
        float hitFxScale = 1.0f;
        float selectionHeight = -1.0f;
        float selectionRadius = -1.0f;
        float pathfindingCollisionRadius = -1.0f;
        std::optional<float> overrideGameplayCollisionRadius {};
        std::array<std::shared_ptr<yordle::data::meta::SpellLevelUpInfo>, 4> SpellLevelUpInfo { nullptr, nullptr, nullptr, nullptr };
        std::vector<std::shared_ptr<yordle::data::meta::RecSpellRankUpInfo>> RecSpellRankUpInfo {};
        std::string parName {};
        std::string friendlyTooltip {};
        std::string enemyTooltip {};
        std::string name {};
        float outlineBBoxExpansion = 0.0f;
        bool mUseCCAnimations = false;
        std::string jointForAnimAdjustedSelection {};
        std::vector<std::string> weaponMaterials { "None" };
        std::string charAudioNameOverride {};
        std::string minimapIconOverride {};
        std::string hoverIndicatorTextureName {};
        std::string hoverLineIndicatorBaseTextureName {};
        std::string hoverLineIndicatorTargetTextureName {};
        float hoverLineIndicatorWidth = 50.0f;
        float hoverIndicatorRadius = 100.0f;
        float hoverLineIndicatorWidthMinimap = 100.0f;
        float hoverIndicatorRadiusMinimap = 200.0f;
        bool hoverIndicatorRotateToPlayer = false;
        std::string hoverIndicatorMinimapOverride {};
        float areaIndicatorRadius = 100.0f;
        float areaIndicatorMinRadius = 120.0f;
        float areaIndicatorMaxDistance = 120.0f;
        float areaIndicatorTargetDistance = 400.0f;
        float areaIndicatorMinDistance = 25.0f;
        float areaIndicatorTextureSize = 50.0f;
        std::string areaIndicatorTextureName {};
        std::string silhouetteAttachmentAnim = "Idle1";
        std::shared_ptr<yordle::data::meta::TargetLaserComponentEffects> targetLaserEffects {};
        std::shared_ptr<yordle::data::meta::TargetLaserComponentEffects> DisabledTargetLaserEffects {};
        std::shared_ptr<yordle::data::meta::xd60f170b> xd60f170b {};
        std::shared_ptr<yordle::data::meta::EvolutionDescription> evolutionData {};
        std::shared_ptr<yordle::data::meta::UseableData> UseableData {};
        bool recordAsWard = false;
        float minionScoreValue = 1.0f;
        bool useRiotRelationships = false;
        std::string unitTagsString {};
        uint32_t friendlyUxOverrideTeam = 0u;
        std::string friendlyUxOverrideIncludeTagsString {};
        std::string friendlyUxOverrideExcludeTagsString {};
        std::shared_ptr<yordle::data::meta::ToolEducationData> mEducationToolData {};
        std::array<int32_t, 4> mAbilitySlotCC { 0, 0, 0, 0 };
        std::shared_ptr<yordle::data::meta::CharacterToolData> CharacterToolData {};
        bool platformEnabled = false;
        float MovingTowardEnemyActivationAngle = 45.0f;
        std::vector<yordle::data::meta::bin_ref<yordle::data::meta::AbilityObject>> mAbilities {};
        uint32_t onKillEvent = 220u;
        uint32_t OnKillEventSteal = 220u;
        uint32_t onKillEventForSpectator = 220u;
        std::map<yordle::data::meta::bin_fnv_hash, std::shared_ptr<yordle::data::meta::IGameCalculation>> mCharacterCalculations {};
        yordle::data::meta::bin_ref<yordle::data::meta::SpellObject> mCharacterPassiveSpell { 1585338886 };
        std::vector<std::shared_ptr<yordle::data::meta::CharacterPassiveData>> mCharacterPassiveBuffs {};
        bool x5d7c7c0b = true;
        std::array<std::string, 4> spellNames { "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell" };
        std::array<std::string, 16> extraSpells { "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell", "BaseSpell" };
        std::shared_ptr<yordle::data::meta::StatFormulaDataList> mDefaultStatOverrides {};
    };
}
#define YORDLE_META_DEF_CharacterRecord
#endif
