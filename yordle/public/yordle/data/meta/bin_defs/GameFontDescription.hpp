/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_GameFontDescription
#pragma once

#include <memory>
#include <string>
#include <cstdint>
#include <array>
#include <optional>

#include <yordle/data/meta/bin_defs/FontType.hpp>
#include <yordle/data/meta/bin_defs/FontResolutionData.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
#ifndef YORDLE_META_DEF_FontType
    struct FontType;
#endif

#ifndef YORDLE_META_DEF_FontResolutionData
    struct FontResolutionData;
#endif
    struct YORDLE_EXPORT GameFontDescription : public bin_class {
        explicit GameFontDescription(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3812866480u;
        }

        std::string name {};
        yordle::data::meta::bin_ref<yordle::data::meta::FontType> typeData { 766729624 };
        yordle::data::meta::bin_ref<yordle::data::meta::FontResolutionData> resolutionData { 231582978 };
        std::array<uint8_t, 4> color { 0, 0, 0, 255 };
        std::array<uint8_t, 4> outlineColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> shadowColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> glowColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> x3cc9ac15 { 255, 0, 0, 255 };
        std::optional<std::array<uint8_t, 4>> colorblindColor {};
        std::optional<std::array<uint8_t, 4>> colorblindOutlineColor {};
        std::optional<std::array<uint8_t, 4>> colorblindShadowColor {};
        std::optional<std::array<uint8_t, 4>> colorblindGlowColor {};
        std::optional<std::array<uint8_t, 4>> xc2008b7b {};
        std::string fillTextureName {};
    };
}
#define YORDLE_META_DEF_GameFontDescription
#endif
