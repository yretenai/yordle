/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_HudColorData
#pragma once

#include <memory>
#include <cstdint>
#include <array>

#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
    struct YORDLE_EXPORT HudColorData : public bin_class {
        explicit HudColorData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3892017401u;
        }

        std::array<uint8_t, 4> mSelfColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mFriendlyColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mEnemyColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mNeutralColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mOrderColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mChaosColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mJunglePlantColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mFriendlyLaneMinionBarColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mEnemyLaneMinionBarColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mDeathFriendlyTeamColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mDeathEnemyTeamColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mDeathOrderColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mDeathChaosColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mInputChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mShadowChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mFriendlyChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mAllChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mEnemyChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mNeutralChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mPingChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mTeamChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mNetworkChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mOrderChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mChaosChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mGoldChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mTimestampChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mWhisperColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mPartyChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mPlatformChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mFeedbackChatColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mItemCalloutBodyColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mItemCalloutItemColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mMarkedIndicatorColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mSelectedIndicatorColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mHighlightedIndicatorColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mItemHotKeyEnabledColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mItemHotKeyDisabledColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mSpellHotKeyEnabledColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mSpellHotKeyDisabledColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mStatNormalColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mStatBoostedColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mLevelUpColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mEvolutionColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mSummonerNameDeadColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mSummonerNameDefaultColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mSummonerNameSelfColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mVoiceChatDefaultTextColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mVoiceChatHoverTextColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> mVoiceChatHaloTextureColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> x3ca4e54 { 0, 0, 0, 255 };
        std::array<uint8_t, 4> xdfd9f7a0 { 0, 0, 0, 255 };
        std::array<uint8_t, 4> xd614aa57 { 0, 0, 0, 255 };
        std::array<uint8_t, 4> VoteEmptyColor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> x51c13ad7 { 0, 0, 0, 255 };
        std::array<uint8_t, 4> VoteNocolor { 0, 0, 0, 255 };
        std::array<uint8_t, 4> x3f68efb8 { 0, 0, 0, 255 };
        std::array<uint8_t, 4> xcd9cb6c5 { 0, 0, 0, 255 };
        std::array<uint8_t, 4> xc14d71dc { 0, 0, 0, 255 };
        std::array<uint8_t, 4> x9487808b { 210, 230, 240, 255 };
        std::array<uint8_t, 4> xfc46842 { 140, 155, 160, 255 };
        std::array<uint8_t, 4> x3b64dfe3 { 255, 255, 255, 255 };
        std::array<uint8_t, 4> x672ccd56 { 86, 90, 91, 255 };
        std::array<std::array<uint8_t, 4>, 5> x9316f661 { std::array<uint8_t, 4>({ 140, 155, 160, 255 }), std::array<uint8_t, 4>({ 90, 187, 62, 255 }), std::array<uint8_t, 4>({ 255, 194, 63, 255 }), std::array<uint8_t, 4>({ 193, 17, 202, 255 }), std::array<uint8_t, 4>({ 0, 144, 252, 255 }) };
        std::array<uint8_t, 4> x30c22182 { 0, 230, 255, 255 };
        std::array<uint8_t, 4> xee9a2886 { 255, 255, 255, 255 };
        std::array<uint8_t, 4> xc09ccdd8 { 255, 255, 255, 255 };
        std::array<uint8_t, 4> x24eb55a3 { 255, 0, 0, 255 };
        std::array<uint8_t, 4> x2f02af61 { 0, 255, 0, 255 };
        std::array<uint8_t, 4> xca1d9872 { 0, 0, 255, 255 };
    };
}
#define YORDLE_META_DEF_HudColorData
#endif
