/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#include <yordle/data/meta/bin_defs/AnimationGraphData.hpp>

#include <yordle/data/meta/bin_defs/ClipBaseData.hpp>
#include <yordle/data/meta/bin_defs/MaskData.hpp>
#include <yordle/data/meta/bin_defs/TrackData.hpp>
#include <yordle/data/meta/bin_defs/SyncGroupData.hpp>
#include <yordle/data/meta/bin_defs/BaseBlendData.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/prop/empty_prop.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>
#include <yordle/data/prop/structure_prop.hpp>

yordle::data::meta::AnimationGraphData::AnimationGraphData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop) : yordle::data::meta::bin_class(prop) {
    if(prop == nullptr) {
        return;
    }
    auto ptr_mUseCascadeBlend = prop->cast_prop<yordle::data::prop::bool_prop>(3281533642u);
    if(ptr_mUseCascadeBlend != nullptr) {
        mUseCascadeBlend = ptr_mUseCascadeBlend->value;
    }

    auto ptr_mCascadeBlendValue = prop->cast_prop<yordle::data::prop::float32_prop>(508817726u);
    if(ptr_mCascadeBlendValue != nullptr) {
        mCascadeBlendValue = ptr_mCascadeBlendValue->value;
    }

    auto ptr_mClipDataMap = prop->cast_prop<yordle::data::prop::map_prop>(1172382456u);
    if(ptr_mClipDataMap != nullptr) {
        for(const auto &set_mClipDataMap_pair : ptr_mClipDataMap->value) {
            auto ptr_mClipDataMap_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_mClipDataMap_pair.first);
            auto ptr_mClipDataMap_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::structure_prop>(set_mClipDataMap_pair.second);
            if(ptr_mClipDataMap_key != nullptr && ptr_mClipDataMap_value != nullptr) {
                mClipDataMap.emplace(ptr_mClipDataMap_key->value, yordle::data::meta::deserialize<yordle::data::meta::ClipBaseData>(ptr_mClipDataMap_value, 3917866950u));
            }
        }
    }

    auto ptr_mMaskDataMap = prop->cast_prop<yordle::data::prop::map_prop>(3724833902u);
    if(ptr_mMaskDataMap != nullptr) {
        for(const auto &set_mMaskDataMap_pair : ptr_mMaskDataMap->value) {
            auto ptr_mMaskDataMap_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_mMaskDataMap_pair.first);
            auto ptr_mMaskDataMap_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mMaskDataMap_pair.second);
            if(ptr_mMaskDataMap_key != nullptr && ptr_mMaskDataMap_value != nullptr) {
                mMaskDataMap.emplace(ptr_mMaskDataMap_key->value, yordle::data::meta::deserialize<yordle::data::meta::MaskData>(ptr_mMaskDataMap_value, 725360953u));
            }
        }
    }

    auto ptr_mTrackDataMap = prop->cast_prop<yordle::data::prop::map_prop>(954893735u);
    if(ptr_mTrackDataMap != nullptr) {
        for(const auto &set_mTrackDataMap_pair : ptr_mTrackDataMap->value) {
            auto ptr_mTrackDataMap_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_mTrackDataMap_pair.first);
            auto ptr_mTrackDataMap_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mTrackDataMap_pair.second);
            if(ptr_mTrackDataMap_key != nullptr && ptr_mTrackDataMap_value != nullptr) {
                mTrackDataMap.emplace(ptr_mTrackDataMap_key->value, yordle::data::meta::deserialize<yordle::data::meta::TrackData>(ptr_mTrackDataMap_value, 2552904996u));
            }
        }
    }

    auto ptr_mSyncGroupDataMap = prop->cast_prop<yordle::data::prop::map_prop>(2944942468u);
    if(ptr_mSyncGroupDataMap != nullptr) {
        for(const auto &set_mSyncGroupDataMap_pair : ptr_mSyncGroupDataMap->value) {
            auto ptr_mSyncGroupDataMap_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_mSyncGroupDataMap_pair.first);
            auto ptr_mSyncGroupDataMap_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mSyncGroupDataMap_pair.second);
            if(ptr_mSyncGroupDataMap_key != nullptr && ptr_mSyncGroupDataMap_value != nullptr) {
                mSyncGroupDataMap.emplace(ptr_mSyncGroupDataMap_key->value, yordle::data::meta::deserialize<yordle::data::meta::SyncGroupData>(ptr_mSyncGroupDataMap_value, 1718266157u));
            }
        }
    }

    auto ptr_mBlendDataTable = prop->cast_prop<yordle::data::prop::map_prop>(814814125u);
    if(ptr_mBlendDataTable != nullptr) {
        for(const auto &set_mBlendDataTable_pair : ptr_mBlendDataTable->value) {
            auto ptr_mBlendDataTable_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::uint64_prop>(set_mBlendDataTable_pair.first);
            auto ptr_mBlendDataTable_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::structure_prop>(set_mBlendDataTable_pair.second);
            if(ptr_mBlendDataTable_key != nullptr && ptr_mBlendDataTable_value != nullptr) {
                mBlendDataTable.emplace(ptr_mBlendDataTable_key->value, yordle::data::meta::deserialize<yordle::data::meta::BaseBlendData>(ptr_mBlendDataTable_value, 3172694155u));
            }
        }
    }

    auto ptr_xd31ccb9f = prop->cast_prop<yordle::data::prop::fnv_hash_prop>(3541879711u);
    if(ptr_xd31ccb9f != nullptr) {
        xd31ccb9f = ptr_xd31ccb9f->value;
    }
}
