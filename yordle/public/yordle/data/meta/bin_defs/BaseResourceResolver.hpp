/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_BaseResourceResolver
#pragma once

#include <memory>
#include <map>

#include <yordle/data/meta/bin_defs/IResource.hpp>
#include <yordle/data/meta/bin_defs/IResourceResolver.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
#ifndef YORDLE_META_DEF_IResource
    struct IResource;
#endif
    struct YORDLE_EXPORT BaseResourceResolver : public IResourceResolver {
        explicit BaseResourceResolver(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 1923179998u || IResourceResolver::is_type(type);
        }

        std::map<yordle::data::meta::bin_fnv_hash, yordle::data::meta::bin_ref<yordle::data::meta::IResource>> resourceMap {};
    };
}
#define YORDLE_META_DEF_BaseResourceResolver
#endif
