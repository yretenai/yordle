/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#include <yordle/data/meta/bin_defs/CharacterRecord.hpp>

#include <yordle/data/meta/bin_defs/PerkStyle.hpp>
#include <yordle/data/meta/bin_defs/PerkReplacementList.hpp>
#include <yordle/data/meta/bin_defs/AbilityResourceSlotInfo.hpp>
#include <yordle/data/meta/bin_defs/AttackSlotData.hpp>
#include <yordle/data/meta/bin_defs/SpellLevelUpInfo.hpp>
#include <yordle/data/meta/bin_defs/RecSpellRankUpInfo.hpp>
#include <yordle/data/meta/bin_defs/TargetLaserComponentEffects.hpp>
#include <yordle/data/meta/bin_defs/EvolutionDescription.hpp>
#include <yordle/data/meta/bin_defs/UseableData.hpp>
#include <yordle/data/meta/bin_defs/ToolEducationData.hpp>
#include <yordle/data/meta/bin_defs/CharacterToolData.hpp>
#include <yordle/data/meta/bin_defs/AbilityObject.hpp>
#include <yordle/data/meta/bin_defs/IGameCalculation.hpp>
#include <yordle/data/meta/bin_defs/SpellObject.hpp>
#include <yordle/data/meta/bin_defs/CharacterPassiveData.hpp>
#include <yordle/data/meta/bin_defs/StatFormulaDataList.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/prop/empty_prop.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>
#include <yordle/data/prop/structure_prop.hpp>

yordle::data::meta::CharacterRecord::CharacterRecord(const std::shared_ptr<yordle::data::prop::structure_prop> &prop) : yordle::data::meta::bin_class(prop) {
    if(prop == nullptr) {
        return;
    }
    auto ptr_mCharacterName = prop->cast_prop<yordle::data::prop::string_prop>(4284964308u);
    if(ptr_mCharacterName != nullptr) {
        mCharacterName = ptr_mCharacterName->value;
    }

    auto ptr_mFallbackCharacterName = prop->cast_prop<yordle::data::prop::string_prop>(2716178u);
    if(ptr_mFallbackCharacterName != nullptr) {
        mFallbackCharacterName = ptr_mFallbackCharacterName->value;
    }

    auto ptr_flags = prop->cast_prop<yordle::data::prop::uint32_prop>(2624027180u);
    if(ptr_flags != nullptr) {
        flags = ptr_flags->value;
    }

    auto ptr_minionFlags = prop->cast_prop<yordle::data::prop::uint32_prop>(548763850u);
    if(ptr_minionFlags != nullptr) {
        minionFlags = ptr_minionFlags->value;
    }

    auto ptr_assetCategory = prop->cast_prop<yordle::data::prop::string_prop>(829774143u);
    if(ptr_assetCategory != nullptr) {
        assetCategory = ptr_assetCategory->value;
    }

    auto ptr_purchaseIdentities = prop->cast_prop<yordle::data::prop::set_prop>(4230214092u);
    if(ptr_purchaseIdentities != nullptr) {
        for(const auto &set_purchaseIdentities_entry : ptr_purchaseIdentities->value) {
            auto ptr_purchaseIdentities_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_purchaseIdentities_entry);
            if(ptr_purchaseIdentities_entry != nullptr) {
                purchaseIdentities.emplace_back(ptr_purchaseIdentities_entry->value);
            }
        }
    }

    auto ptr_mClientSideItemInventory = prop->cast_prop<yordle::data::prop::set_prop>(1226439805u);
    if(ptr_mClientSideItemInventory != nullptr) {
        for(const auto &set_mClientSideItemInventory_entry : ptr_mClientSideItemInventory->value) {
            auto ptr_mClientSideItemInventory_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_mClientSideItemInventory_entry);
            if(ptr_mClientSideItemInventory_entry != nullptr) {
                mClientSideItemInventory.emplace_back(ptr_mClientSideItemInventory_entry->value);
            }
        }
    }

    auto ptr_mPreferredPerkStyle = prop->cast_prop<yordle::data::prop::reference_prop>(92127542u);
    if(ptr_mPreferredPerkStyle != nullptr) {
        mPreferredPerkStyle = yordle::data::meta::bin_ref<yordle::data::meta::PerkStyle>(240569694u, ptr_mPreferredPerkStyle->value);
    }

    auto ptr_mPerkReplacements = prop->cast_prop<yordle::data::prop::inline_structure_prop>(665947137u);
    if(ptr_mPerkReplacements != nullptr) {
        mPerkReplacements = yordle::data::meta::deserialize<yordle::data::meta::PerkReplacementList>(ptr_mPerkReplacements, 2307915623u);
    }

    auto ptr_baseHP = prop->cast_prop<yordle::data::prop::float32_prop>(397761056u);
    if(ptr_baseHP != nullptr) {
        baseHP = ptr_baseHP->value;
    }

    auto ptr_hpPerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(265725146u);
    if(ptr_hpPerLevel != nullptr) {
        hpPerLevel = ptr_hpPerLevel->value;
    }

    auto ptr_baseStaticHPRegen = prop->cast_prop<yordle::data::prop::float32_prop>(1259351639u);
    if(ptr_baseStaticHPRegen != nullptr) {
        baseStaticHPRegen = ptr_baseStaticHPRegen->value;
    }

    auto ptr_baseFactorHPRegen = prop->cast_prop<yordle::data::prop::float32_prop>(1589588024u);
    if(ptr_baseFactorHPRegen != nullptr) {
        baseFactorHPRegen = ptr_baseFactorHPRegen->value;
    }

    auto ptr_hpRegenPerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(3426677089u);
    if(ptr_hpRegenPerLevel != nullptr) {
        hpRegenPerLevel = ptr_hpRegenPerLevel->value;
    }

    auto ptr_healthBarHeight = prop->cast_prop<yordle::data::prop::float32_prop>(2687144011u);
    if(ptr_healthBarHeight != nullptr) {
        healthBarHeight = ptr_healthBarHeight->value;
    }

    auto ptr_healthBarFullParallax = prop->cast_prop<yordle::data::prop::bool_prop>(3029139618u);
    if(ptr_healthBarFullParallax != nullptr) {
        healthBarFullParallax = ptr_healthBarFullParallax->value;
    }

    auto ptr_selfChampSpecificHealthSuffix = prop->cast_prop<yordle::data::prop::string_prop>(934036257u);
    if(ptr_selfChampSpecificHealthSuffix != nullptr) {
        selfChampSpecificHealthSuffix = ptr_selfChampSpecificHealthSuffix->value;
    }

    auto ptr_selfCBChampSpecificHealthSuffix = prop->cast_prop<yordle::data::prop::string_prop>(3278337958u);
    if(ptr_selfCBChampSpecificHealthSuffix != nullptr) {
        selfCBChampSpecificHealthSuffix = ptr_selfCBChampSpecificHealthSuffix->value;
    }

    auto ptr_allyChampSpecificHealthSuffix = prop->cast_prop<yordle::data::prop::string_prop>(1944098033u);
    if(ptr_allyChampSpecificHealthSuffix != nullptr) {
        allyChampSpecificHealthSuffix = ptr_allyChampSpecificHealthSuffix->value;
    }

    auto ptr_enemyChampSpecificHealthSuffix = prop->cast_prop<yordle::data::prop::string_prop>(4083525957u);
    if(ptr_enemyChampSpecificHealthSuffix != nullptr) {
        enemyChampSpecificHealthSuffix = ptr_enemyChampSpecificHealthSuffix->value;
    }

    auto ptr_highlightHealthbarIcons = prop->cast_prop<yordle::data::prop::bool_prop>(2711535288u);
    if(ptr_highlightHealthbarIcons != nullptr) {
        highlightHealthbarIcons = ptr_highlightHealthbarIcons->value;
    }

    auto ptr_primaryAbilityResource = prop->cast_prop<yordle::data::prop::inline_structure_prop>(3151502861u);
    if(ptr_primaryAbilityResource != nullptr) {
        primaryAbilityResource = yordle::data::meta::deserialize<yordle::data::meta::AbilityResourceSlotInfo>(ptr_primaryAbilityResource, 3459369333u);
    }

    auto ptr_secondaryAbilityResource = prop->cast_prop<yordle::data::prop::inline_structure_prop>(4183540517u);
    if(ptr_secondaryAbilityResource != nullptr) {
        secondaryAbilityResource = yordle::data::meta::deserialize<yordle::data::meta::AbilityResourceSlotInfo>(ptr_secondaryAbilityResource, 3459369333u);
    }

    auto ptr_BaseDamage = prop->cast_prop<yordle::data::prop::float32_prop>(64618745u);
    if(ptr_BaseDamage != nullptr) {
        BaseDamage = ptr_BaseDamage->value;
    }

    auto ptr_damagePerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(2925504951u);
    if(ptr_damagePerLevel != nullptr) {
        damagePerLevel = ptr_damagePerLevel->value;
    }

    auto ptr_baseArmor = prop->cast_prop<yordle::data::prop::float32_prop>(126349775u);
    if(ptr_baseArmor != nullptr) {
        baseArmor = ptr_baseArmor->value;
    }

    auto ptr_armorPerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(3658591611u);
    if(ptr_armorPerLevel != nullptr) {
        armorPerLevel = ptr_armorPerLevel->value;
    }

    auto ptr_baseSpellBlock = prop->cast_prop<yordle::data::prop::float32_prop>(45560055u);
    if(ptr_baseSpellBlock != nullptr) {
        baseSpellBlock = ptr_baseSpellBlock->value;
    }

    auto ptr_spellBlockPerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(3164921061u);
    if(ptr_spellBlockPerLevel != nullptr) {
        spellBlockPerLevel = ptr_spellBlockPerLevel->value;
    }

    auto ptr_baseDodge = prop->cast_prop<yordle::data::prop::float32_prop>(128327895u);
    if(ptr_baseDodge != nullptr) {
        baseDodge = ptr_baseDodge->value;
    }

    auto ptr_DodgePerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(2605635303u);
    if(ptr_DodgePerLevel != nullptr) {
        DodgePerLevel = ptr_DodgePerLevel->value;
    }

    auto ptr_baseMissChance = prop->cast_prop<yordle::data::prop::float32_prop>(4084633900u);
    if(ptr_baseMissChance != nullptr) {
        baseMissChance = ptr_baseMissChance->value;
    }

    auto ptr_baseCritChance = prop->cast_prop<yordle::data::prop::float32_prop>(3292795416u);
    if(ptr_baseCritChance != nullptr) {
        baseCritChance = ptr_baseCritChance->value;
    }

    auto ptr_critPerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(1073095234u);
    if(ptr_critPerLevel != nullptr) {
        critPerLevel = ptr_critPerLevel->value;
    }

    auto ptr_critDamageMultiplier = prop->cast_prop<yordle::data::prop::float32_prop>(2331773119u);
    if(ptr_critDamageMultiplier != nullptr) {
        critDamageMultiplier = ptr_critDamageMultiplier->value;
    }

    auto ptr_baseMoveSpeed = prop->cast_prop<yordle::data::prop::float32_prop>(2018645152u);
    if(ptr_baseMoveSpeed != nullptr) {
        baseMoveSpeed = ptr_baseMoveSpeed->value;
    }

    auto ptr_xcb4451d3 = prop->cast_prop<yordle::data::prop::float32_prop>(3410252243u);
    if(ptr_xcb4451d3 != nullptr) {
        xcb4451d3 = ptr_xcb4451d3->value;
    }

    auto ptr_attackRange = prop->cast_prop<yordle::data::prop::float32_prop>(3262159114u);
    if(ptr_attackRange != nullptr) {
        attackRange = ptr_attackRange->value;
    }

    auto ptr_AttackSpeed = prop->cast_prop<yordle::data::prop::float32_prop>(2048957000u);
    if(ptr_AttackSpeed != nullptr) {
        AttackSpeed = ptr_AttackSpeed->value;
    }

    auto ptr_attackSpeedRatio = prop->cast_prop<yordle::data::prop::float32_prop>(1623530539u);
    if(ptr_attackSpeedRatio != nullptr) {
        attackSpeedRatio = ptr_attackSpeedRatio->value;
    }

    auto ptr_attackSpeedPerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(467381983u);
    if(ptr_attackSpeedPerLevel != nullptr) {
        attackSpeedPerLevel = ptr_attackSpeedPerLevel->value;
    }

    auto ptr_AbilityPowerIncPerLevel = prop->cast_prop<yordle::data::prop::float32_prop>(3364645729u);
    if(ptr_AbilityPowerIncPerLevel != nullptr) {
        AbilityPowerIncPerLevel = ptr_AbilityPowerIncPerLevel->value;
    }

    auto ptr_mAdaptiveForceToAbilityPowerWeight = prop->cast_prop<yordle::data::prop::float32_prop>(396399247u);
    if(ptr_mAdaptiveForceToAbilityPowerWeight != nullptr) {
        mAdaptiveForceToAbilityPowerWeight = ptr_mAdaptiveForceToAbilityPowerWeight->value;
    }

    auto ptr_x503a1944 = prop->cast_prop<yordle::data::prop::bool_prop>(1345984836u);
    if(ptr_x503a1944 != nullptr) {
        x503a1944 = ptr_x503a1944->value;
    }

    auto ptr_basicAttack = prop->cast_prop<yordle::data::prop::inline_structure_prop>(3102779173u);
    if(ptr_basicAttack != nullptr) {
        basicAttack = yordle::data::meta::deserialize<yordle::data::meta::AttackSlotData>(ptr_basicAttack, 112014489u);
    }

    auto ptr_ExtraAttacks = prop->cast_prop<yordle::data::prop::set_prop>(1986802918u);
    if(ptr_ExtraAttacks != nullptr) {
        for(const auto &set_ExtraAttacks_entry : ptr_ExtraAttacks->value) {
            auto ptr_ExtraAttacks_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_ExtraAttacks_entry);
            if(ptr_ExtraAttacks_entry != nullptr) {
                ExtraAttacks.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::AttackSlotData>(ptr_ExtraAttacks_entry, 112014489u));
            }
        }
    }

    auto ptr_critAttacks = prop->cast_prop<yordle::data::prop::set_prop>(3598422258u);
    if(ptr_critAttacks != nullptr) {
        for(const auto &set_critAttacks_entry : ptr_critAttacks->value) {
            auto ptr_critAttacks_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_critAttacks_entry);
            if(ptr_critAttacks_entry != nullptr) {
                critAttacks.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::AttackSlotData>(ptr_critAttacks_entry, 112014489u));
            }
        }
    }

    auto ptr_acquisitionRange = prop->cast_prop<yordle::data::prop::float32_prop>(1676570857u);
    if(ptr_acquisitionRange != nullptr) {
        acquisitionRange = ptr_acquisitionRange->value;
    }

    auto ptr_wakeUpRange = prop->cast_prop<yordle::data::prop::optional_prop>(1722962621u);
    if(ptr_wakeUpRange != nullptr) {
        auto ptr_wakeUpRange_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(ptr_wakeUpRange->value);
        if (ptr_wakeUpRange_opt != nullptr) {
            wakeUpRange = ptr_wakeUpRange_opt->value;
        }
    }

    auto ptr_firstAcquisitionRange = prop->cast_prop<yordle::data::prop::optional_prop>(1679423533u);
    if(ptr_firstAcquisitionRange != nullptr) {
        auto ptr_firstAcquisitionRange_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(ptr_firstAcquisitionRange->value);
        if (ptr_firstAcquisitionRange_opt != nullptr) {
            firstAcquisitionRange = ptr_firstAcquisitionRange_opt->value;
        }
    }

    auto ptr_attackAutoInterruptPercent = prop->cast_prop<yordle::data::prop::float32_prop>(2726771390u);
    if(ptr_attackAutoInterruptPercent != nullptr) {
        attackAutoInterruptPercent = ptr_attackAutoInterruptPercent->value;
    }

    auto ptr_towerTargetingPriorityBoost = prop->cast_prop<yordle::data::prop::float32_prop>(1737457744u);
    if(ptr_towerTargetingPriorityBoost != nullptr) {
        towerTargetingPriorityBoost = ptr_towerTargetingPriorityBoost->value;
    }

    auto ptr_goldGivenOnDeath = prop->cast_prop<yordle::data::prop::float32_prop>(4120935405u);
    if(ptr_goldGivenOnDeath != nullptr) {
        goldGivenOnDeath = ptr_goldGivenOnDeath->value;
    }

    auto ptr_expGivenOnDeath = prop->cast_prop<yordle::data::prop::float32_prop>(3431261418u);
    if(ptr_expGivenOnDeath != nullptr) {
        expGivenOnDeath = ptr_expGivenOnDeath->value;
    }

    auto ptr_goldRadius = prop->cast_prop<yordle::data::prop::float32_prop>(1721025217u);
    if(ptr_goldRadius != nullptr) {
        goldRadius = ptr_goldRadius->value;
    }

    auto ptr_experienceRadius = prop->cast_prop<yordle::data::prop::float32_prop>(1893193335u);
    if(ptr_experienceRadius != nullptr) {
        experienceRadius = ptr_experienceRadius->value;
    }

    auto ptr_deathEventListeningRadius = prop->cast_prop<yordle::data::prop::float32_prop>(1561970222u);
    if(ptr_deathEventListeningRadius != nullptr) {
        deathEventListeningRadius = ptr_deathEventListeningRadius->value;
    }

    auto ptr_localGoldGivenOnDeath = prop->cast_prop<yordle::data::prop::float32_prop>(3645072012u);
    if(ptr_localGoldGivenOnDeath != nullptr) {
        localGoldGivenOnDeath = ptr_localGoldGivenOnDeath->value;
    }

    auto ptr_localExpGivenOnDeath = prop->cast_prop<yordle::data::prop::float32_prop>(1230396841u);
    if(ptr_localExpGivenOnDeath != nullptr) {
        localExpGivenOnDeath = ptr_localExpGivenOnDeath->value;
    }

    auto ptr_localGoldSplitWithLastHitter = prop->cast_prop<yordle::data::prop::bool_prop>(3047977906u);
    if(ptr_localGoldSplitWithLastHitter != nullptr) {
        localGoldSplitWithLastHitter = ptr_localGoldSplitWithLastHitter->value;
    }

    auto ptr_globalGoldGivenOnDeath = prop->cast_prop<yordle::data::prop::float32_prop>(2448180294u);
    if(ptr_globalGoldGivenOnDeath != nullptr) {
        globalGoldGivenOnDeath = ptr_globalGoldGivenOnDeath->value;
    }

    auto ptr_globalExpGivenOnDeath = prop->cast_prop<yordle::data::prop::float32_prop>(2627055079u);
    if(ptr_globalExpGivenOnDeath != nullptr) {
        globalExpGivenOnDeath = ptr_globalExpGivenOnDeath->value;
    }

    auto ptr_perceptionBubbleRadius = prop->cast_prop<yordle::data::prop::optional_prop>(2182306178u);
    if(ptr_perceptionBubbleRadius != nullptr) {
        auto ptr_perceptionBubbleRadius_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(ptr_perceptionBubbleRadius->value);
        if (ptr_perceptionBubbleRadius_opt != nullptr) {
            perceptionBubbleRadius = ptr_perceptionBubbleRadius_opt->value;
        }
    }

    auto ptr_perceptionBoundingBoxSize = prop->cast_prop<yordle::data::prop::optional_prop>(1352798482u);
    if(ptr_perceptionBoundingBoxSize != nullptr) {
        auto ptr_perceptionBoundingBoxSize_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::vector_prop>(ptr_perceptionBoundingBoxSize->value);
        if (ptr_perceptionBoundingBoxSize_opt != nullptr) {
            perceptionBoundingBoxSize = ptr_perceptionBoundingBoxSize_opt->value;
        }
    }

    auto ptr_significance = prop->cast_prop<yordle::data::prop::float32_prop>(1658179760u);
    if(ptr_significance != nullptr) {
        significance = ptr_significance->value;
    }

    auto ptr_untargetableSpawnTime = prop->cast_prop<yordle::data::prop::float32_prop>(2502591299u);
    if(ptr_untargetableSpawnTime != nullptr) {
        untargetableSpawnTime = ptr_untargetableSpawnTime->value;
    }

    auto ptr_abilityPower = prop->cast_prop<yordle::data::prop::float32_prop>(2131952818u);
    if(ptr_abilityPower != nullptr) {
        abilityPower = ptr_abilityPower->value;
    }

    auto ptr_deathTime = prop->cast_prop<yordle::data::prop::float32_prop>(3032888844u);
    if(ptr_deathTime != nullptr) {
        deathTime = ptr_deathTime->value;
    }

    auto ptr_occludedUnitSelectableDistance = prop->cast_prop<yordle::data::prop::float32_prop>(3237031849u);
    if(ptr_occludedUnitSelectableDistance != nullptr) {
        occludedUnitSelectableDistance = ptr_occludedUnitSelectableDistance->value;
    }

    auto ptr_criticalAttack = prop->cast_prop<yordle::data::prop::string_prop>(572959540u);
    if(ptr_criticalAttack != nullptr) {
        criticalAttack = ptr_criticalAttack->value;
    }

    auto ptr_passiveName = prop->cast_prop<yordle::data::prop::string_prop>(3388626109u);
    if(ptr_passiveName != nullptr) {
        passiveName = ptr_passiveName->value;
    }

    auto ptr_passiveLuaName = prop->cast_prop<yordle::data::prop::string_prop>(593657323u);
    if(ptr_passiveLuaName != nullptr) {
        passiveLuaName = ptr_passiveLuaName->value;
    }

    auto ptr_passiveToolTip = prop->cast_prop<yordle::data::prop::string_prop>(2730404133u);
    if(ptr_passiveToolTip != nullptr) {
        passiveToolTip = ptr_passiveToolTip->value;
    }

    auto ptr_passiveSpell = prop->cast_prop<yordle::data::prop::string_prop>(4105475896u);
    if(ptr_passiveSpell != nullptr) {
        passiveSpell = ptr_passiveSpell->value;
    }

    auto ptr_passiveRange = prop->cast_prop<yordle::data::prop::float32_prop>(3575536555u);
    if(ptr_passiveRange != nullptr) {
        passiveRange = ptr_passiveRange->value;
    }

    auto ptr_passive1IconName = prop->cast_prop<yordle::data::prop::string_prop>(4078416219u);
    if(ptr_passive1IconName != nullptr) {
        passive1IconName = ptr_passive1IconName->value;
    }

    auto ptr_hitFxScale = prop->cast_prop<yordle::data::prop::float32_prop>(4230424014u);
    if(ptr_hitFxScale != nullptr) {
        hitFxScale = ptr_hitFxScale->value;
    }

    auto ptr_selectionHeight = prop->cast_prop<yordle::data::prop::float32_prop>(3948818994u);
    if(ptr_selectionHeight != nullptr) {
        selectionHeight = ptr_selectionHeight->value;
    }

    auto ptr_selectionRadius = prop->cast_prop<yordle::data::prop::float32_prop>(1349597859u);
    if(ptr_selectionRadius != nullptr) {
        selectionRadius = ptr_selectionRadius->value;
    }

    auto ptr_pathfindingCollisionRadius = prop->cast_prop<yordle::data::prop::float32_prop>(2445248287u);
    if(ptr_pathfindingCollisionRadius != nullptr) {
        pathfindingCollisionRadius = ptr_pathfindingCollisionRadius->value;
    }

    auto ptr_overrideGameplayCollisionRadius = prop->cast_prop<yordle::data::prop::optional_prop>(2129752149u);
    if(ptr_overrideGameplayCollisionRadius != nullptr) {
        auto ptr_overrideGameplayCollisionRadius_opt = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(ptr_overrideGameplayCollisionRadius->value);
        if (ptr_overrideGameplayCollisionRadius_opt != nullptr) {
            overrideGameplayCollisionRadius = ptr_overrideGameplayCollisionRadius_opt->value;
        }
    }

    auto ptr_SpellLevelUpInfo = prop->cast_prop<yordle::data::prop::set_prop>(2606765944u);
    if(ptr_SpellLevelUpInfo != nullptr) {
        auto index_SpellLevelUpInfo = 0;
        for(const auto &set_SpellLevelUpInfo_entry : ptr_SpellLevelUpInfo->value) {
            auto ptr_SpellLevelUpInfo_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_SpellLevelUpInfo_entry);
            if(ptr_SpellLevelUpInfo_entry != nullptr) {
                SpellLevelUpInfo[index_SpellLevelUpInfo] = yordle::data::meta::deserialize<yordle::data::meta::SpellLevelUpInfo>(ptr_SpellLevelUpInfo_entry, 2606765944u);
            }
            index_SpellLevelUpInfo++;
        }
    }

    auto ptr_RecSpellRankUpInfo = prop->cast_prop<yordle::data::prop::set_prop>(825182082u);
    if(ptr_RecSpellRankUpInfo != nullptr) {
        for(const auto &set_RecSpellRankUpInfo_entry : ptr_RecSpellRankUpInfo->value) {
            auto ptr_RecSpellRankUpInfo_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_RecSpellRankUpInfo_entry);
            if(ptr_RecSpellRankUpInfo_entry != nullptr) {
                RecSpellRankUpInfo.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::RecSpellRankUpInfo>(ptr_RecSpellRankUpInfo_entry, 825182082u));
            }
        }
    }

    auto ptr_parName = prop->cast_prop<yordle::data::prop::string_prop>(2509987083u);
    if(ptr_parName != nullptr) {
        parName = ptr_parName->value;
    }

    auto ptr_friendlyTooltip = prop->cast_prop<yordle::data::prop::string_prop>(2104236997u);
    if(ptr_friendlyTooltip != nullptr) {
        friendlyTooltip = ptr_friendlyTooltip->value;
    }

    auto ptr_enemyTooltip = prop->cast_prop<yordle::data::prop::string_prop>(1636139498u);
    if(ptr_enemyTooltip != nullptr) {
        enemyTooltip = ptr_enemyTooltip->value;
    }

    auto ptr_name = prop->cast_prop<yordle::data::prop::string_prop>(2369371622u);
    if(ptr_name != nullptr) {
        name = ptr_name->value;
    }

    auto ptr_outlineBBoxExpansion = prop->cast_prop<yordle::data::prop::float32_prop>(578496387u);
    if(ptr_outlineBBoxExpansion != nullptr) {
        outlineBBoxExpansion = ptr_outlineBBoxExpansion->value;
    }

    auto ptr_mUseCCAnimations = prop->cast_prop<yordle::data::prop::bool_prop>(4224393806u);
    if(ptr_mUseCCAnimations != nullptr) {
        mUseCCAnimations = ptr_mUseCCAnimations->value;
    }

    auto ptr_jointForAnimAdjustedSelection = prop->cast_prop<yordle::data::prop::string_prop>(3653635669u);
    if(ptr_jointForAnimAdjustedSelection != nullptr) {
        jointForAnimAdjustedSelection = ptr_jointForAnimAdjustedSelection->value;
    }

    auto ptr_weaponMaterials = prop->cast_prop<yordle::data::prop::set_prop>(3550582029u);
    if(ptr_weaponMaterials != nullptr) {
        for(const auto &set_weaponMaterials_entry : ptr_weaponMaterials->value) {
            auto ptr_weaponMaterials_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_weaponMaterials_entry);
            if(ptr_weaponMaterials_entry != nullptr) {
                weaponMaterials.emplace_back(ptr_weaponMaterials_entry->value);
            }
        }
    }

    auto ptr_charAudioNameOverride = prop->cast_prop<yordle::data::prop::string_prop>(485269234u);
    if(ptr_charAudioNameOverride != nullptr) {
        charAudioNameOverride = ptr_charAudioNameOverride->value;
    }

    auto ptr_minimapIconOverride = prop->cast_prop<yordle::data::prop::string_prop>(3673546461u);
    if(ptr_minimapIconOverride != nullptr) {
        minimapIconOverride = ptr_minimapIconOverride->value;
    }

    auto ptr_hoverIndicatorTextureName = prop->cast_prop<yordle::data::prop::string_prop>(3972573138u);
    if(ptr_hoverIndicatorTextureName != nullptr) {
        hoverIndicatorTextureName = ptr_hoverIndicatorTextureName->value;
    }

    auto ptr_hoverLineIndicatorBaseTextureName = prop->cast_prop<yordle::data::prop::string_prop>(3761532491u);
    if(ptr_hoverLineIndicatorBaseTextureName != nullptr) {
        hoverLineIndicatorBaseTextureName = ptr_hoverLineIndicatorBaseTextureName->value;
    }

    auto ptr_hoverLineIndicatorTargetTextureName = prop->cast_prop<yordle::data::prop::string_prop>(1538863295u);
    if(ptr_hoverLineIndicatorTargetTextureName != nullptr) {
        hoverLineIndicatorTargetTextureName = ptr_hoverLineIndicatorTargetTextureName->value;
    }

    auto ptr_hoverLineIndicatorWidth = prop->cast_prop<yordle::data::prop::float32_prop>(705048184u);
    if(ptr_hoverLineIndicatorWidth != nullptr) {
        hoverLineIndicatorWidth = ptr_hoverLineIndicatorWidth->value;
    }

    auto ptr_hoverIndicatorRadius = prop->cast_prop<yordle::data::prop::float32_prop>(919460724u);
    if(ptr_hoverIndicatorRadius != nullptr) {
        hoverIndicatorRadius = ptr_hoverIndicatorRadius->value;
    }

    auto ptr_hoverLineIndicatorWidthMinimap = prop->cast_prop<yordle::data::prop::float32_prop>(1403790919u);
    if(ptr_hoverLineIndicatorWidthMinimap != nullptr) {
        hoverLineIndicatorWidthMinimap = ptr_hoverLineIndicatorWidthMinimap->value;
    }

    auto ptr_hoverIndicatorRadiusMinimap = prop->cast_prop<yordle::data::prop::float32_prop>(1200221283u);
    if(ptr_hoverIndicatorRadiusMinimap != nullptr) {
        hoverIndicatorRadiusMinimap = ptr_hoverIndicatorRadiusMinimap->value;
    }

    auto ptr_hoverIndicatorRotateToPlayer = prop->cast_prop<yordle::data::prop::bool_prop>(553315353u);
    if(ptr_hoverIndicatorRotateToPlayer != nullptr) {
        hoverIndicatorRotateToPlayer = ptr_hoverIndicatorRotateToPlayer->value;
    }

    auto ptr_hoverIndicatorMinimapOverride = prop->cast_prop<yordle::data::prop::string_prop>(2409727365u);
    if(ptr_hoverIndicatorMinimapOverride != nullptr) {
        hoverIndicatorMinimapOverride = ptr_hoverIndicatorMinimapOverride->value;
    }

    auto ptr_areaIndicatorRadius = prop->cast_prop<yordle::data::prop::float32_prop>(1641796731u);
    if(ptr_areaIndicatorRadius != nullptr) {
        areaIndicatorRadius = ptr_areaIndicatorRadius->value;
    }

    auto ptr_areaIndicatorMinRadius = prop->cast_prop<yordle::data::prop::float32_prop>(1769241069u);
    if(ptr_areaIndicatorMinRadius != nullptr) {
        areaIndicatorMinRadius = ptr_areaIndicatorMinRadius->value;
    }

    auto ptr_areaIndicatorMaxDistance = prop->cast_prop<yordle::data::prop::float32_prop>(3937146846u);
    if(ptr_areaIndicatorMaxDistance != nullptr) {
        areaIndicatorMaxDistance = ptr_areaIndicatorMaxDistance->value;
    }

    auto ptr_areaIndicatorTargetDistance = prop->cast_prop<yordle::data::prop::float32_prop>(2923755995u);
    if(ptr_areaIndicatorTargetDistance != nullptr) {
        areaIndicatorTargetDistance = ptr_areaIndicatorTargetDistance->value;
    }

    auto ptr_areaIndicatorMinDistance = prop->cast_prop<yordle::data::prop::float32_prop>(258880456u);
    if(ptr_areaIndicatorMinDistance != nullptr) {
        areaIndicatorMinDistance = ptr_areaIndicatorMinDistance->value;
    }

    auto ptr_areaIndicatorTextureSize = prop->cast_prop<yordle::data::prop::float32_prop>(398845477u);
    if(ptr_areaIndicatorTextureSize != nullptr) {
        areaIndicatorTextureSize = ptr_areaIndicatorTextureSize->value;
    }

    auto ptr_areaIndicatorTextureName = prop->cast_prop<yordle::data::prop::string_prop>(2797773255u);
    if(ptr_areaIndicatorTextureName != nullptr) {
        areaIndicatorTextureName = ptr_areaIndicatorTextureName->value;
    }

    auto ptr_silhouetteAttachmentAnim = prop->cast_prop<yordle::data::prop::string_prop>(2724640783u);
    if(ptr_silhouetteAttachmentAnim != nullptr) {
        silhouetteAttachmentAnim = ptr_silhouetteAttachmentAnim->value;
    }

    auto ptr_targetLaserEffects = prop->cast_prop<yordle::data::prop::structure_prop>(837692407u);
    if(ptr_targetLaserEffects != nullptr) {
        targetLaserEffects = yordle::data::meta::deserialize<yordle::data::meta::TargetLaserComponentEffects>(ptr_targetLaserEffects, 490133160u);
    }

    auto ptr_DisabledTargetLaserEffects = prop->cast_prop<yordle::data::prop::structure_prop>(3440493367u);
    if(ptr_DisabledTargetLaserEffects != nullptr) {
        DisabledTargetLaserEffects = yordle::data::meta::deserialize<yordle::data::meta::TargetLaserComponentEffects>(ptr_DisabledTargetLaserEffects, 490133160u);
    }

    auto ptr_evolutionData = prop->cast_prop<yordle::data::prop::structure_prop>(1831945790u);
    if(ptr_evolutionData != nullptr) {
        evolutionData = yordle::data::meta::deserialize<yordle::data::meta::EvolutionDescription>(ptr_evolutionData, 3253985952u);
    }

    auto ptr_UseableData = prop->cast_prop<yordle::data::prop::inline_structure_prop>(4101150036u);
    if(ptr_UseableData != nullptr) {
        UseableData = yordle::data::meta::deserialize<yordle::data::meta::UseableData>(ptr_UseableData, 4101150036u);
    }

    auto ptr_recordAsWard = prop->cast_prop<yordle::data::prop::bool_prop>(4082356790u);
    if(ptr_recordAsWard != nullptr) {
        recordAsWard = ptr_recordAsWard->value;
    }

    auto ptr_minionScoreValue = prop->cast_prop<yordle::data::prop::float32_prop>(4263074916u);
    if(ptr_minionScoreValue != nullptr) {
        minionScoreValue = ptr_minionScoreValue->value;
    }

    auto ptr_useRiotRelationships = prop->cast_prop<yordle::data::prop::bool_prop>(3966610569u);
    if(ptr_useRiotRelationships != nullptr) {
        useRiotRelationships = ptr_useRiotRelationships->value;
    }

    auto ptr_unitTagsString = prop->cast_prop<yordle::data::prop::string_prop>(819243539u);
    if(ptr_unitTagsString != nullptr) {
        unitTagsString = ptr_unitTagsString->value;
    }

    auto ptr_friendlyUxOverrideTeam = prop->cast_prop<yordle::data::prop::uint32_prop>(2122334618u);
    if(ptr_friendlyUxOverrideTeam != nullptr) {
        friendlyUxOverrideTeam = ptr_friendlyUxOverrideTeam->value;
    }

    auto ptr_friendlyUxOverrideIncludeTagsString = prop->cast_prop<yordle::data::prop::string_prop>(4138667821u);
    if(ptr_friendlyUxOverrideIncludeTagsString != nullptr) {
        friendlyUxOverrideIncludeTagsString = ptr_friendlyUxOverrideIncludeTagsString->value;
    }

    auto ptr_friendlyUxOverrideExcludeTagsString = prop->cast_prop<yordle::data::prop::string_prop>(3195079267u);
    if(ptr_friendlyUxOverrideExcludeTagsString != nullptr) {
        friendlyUxOverrideExcludeTagsString = ptr_friendlyUxOverrideExcludeTagsString->value;
    }

    auto ptr_mEducationToolData = prop->cast_prop<yordle::data::prop::inline_structure_prop>(374615088u);
    if(ptr_mEducationToolData != nullptr) {
        mEducationToolData = yordle::data::meta::deserialize<yordle::data::meta::ToolEducationData>(ptr_mEducationToolData, 2970707127u);
    }

    auto ptr_mAbilitySlotCC = prop->cast_prop<yordle::data::prop::set_prop>(2647981432u);
    if(ptr_mAbilitySlotCC != nullptr) {
        auto index_mAbilitySlotCC = 0;
        for(const auto &set_mAbilitySlotCC_entry : ptr_mAbilitySlotCC->value) {
            auto ptr_mAbilitySlotCC_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::int32_prop>(set_mAbilitySlotCC_entry);
            if(ptr_mAbilitySlotCC_entry != nullptr) {
                mAbilitySlotCC[index_mAbilitySlotCC] = ptr_mAbilitySlotCC_entry->value;
            }
            index_mAbilitySlotCC++;
        }
    }

    auto ptr_CharacterToolData = prop->cast_prop<yordle::data::prop::inline_structure_prop>(3963447610u);
    if(ptr_CharacterToolData != nullptr) {
        CharacterToolData = yordle::data::meta::deserialize<yordle::data::meta::CharacterToolData>(ptr_CharacterToolData, 3963447610u);
    }

    auto ptr_platformEnabled = prop->cast_prop<yordle::data::prop::bool_prop>(1837249471u);
    if(ptr_platformEnabled != nullptr) {
        platformEnabled = ptr_platformEnabled->value;
    }

    auto ptr_MovingTowardEnemyActivationAngle = prop->cast_prop<yordle::data::prop::float32_prop>(940040555u);
    if(ptr_MovingTowardEnemyActivationAngle != nullptr) {
        MovingTowardEnemyActivationAngle = ptr_MovingTowardEnemyActivationAngle->value;
    }

    auto ptr_mAbilities = prop->cast_prop<yordle::data::prop::set_prop>(3799694934u);
    if(ptr_mAbilities != nullptr) {
        for(const auto &set_mAbilities_entry : ptr_mAbilities->value) {
            auto ptr_mAbilities_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::reference_prop>(set_mAbilities_entry);
            if(ptr_mAbilities_entry != nullptr) {
                mAbilities.emplace_back(yordle::data::meta::bin_ref<yordle::data::meta::AbilityObject>(3696800942u, ptr_mAbilities_entry->value));
            }
        }
    }

    auto ptr_onKillEvent = prop->cast_prop<yordle::data::prop::uint32_prop>(976335800u);
    if(ptr_onKillEvent != nullptr) {
        onKillEvent = ptr_onKillEvent->value;
    }

    auto ptr_OnKillEventSteal = prop->cast_prop<yordle::data::prop::uint32_prop>(2663075043u);
    if(ptr_OnKillEventSteal != nullptr) {
        OnKillEventSteal = ptr_OnKillEventSteal->value;
    }

    auto ptr_onKillEventForSpectator = prop->cast_prop<yordle::data::prop::uint32_prop>(1451949008u);
    if(ptr_onKillEventForSpectator != nullptr) {
        onKillEventForSpectator = ptr_onKillEventForSpectator->value;
    }

    auto ptr_mCharacterCalculations = prop->cast_prop<yordle::data::prop::map_prop>(958843525u);
    if(ptr_mCharacterCalculations != nullptr) {
        for(const auto &set_mCharacterCalculations_pair : ptr_mCharacterCalculations->value) {
            auto ptr_mCharacterCalculations_key = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::fnv_hash_prop>(set_mCharacterCalculations_pair.first);
            auto ptr_mCharacterCalculations_value = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::structure_prop>(set_mCharacterCalculations_pair.second);
            if(ptr_mCharacterCalculations_key != nullptr && ptr_mCharacterCalculations_value != nullptr) {
                mCharacterCalculations.emplace(ptr_mCharacterCalculations_key->value, yordle::data::meta::deserialize<yordle::data::meta::IGameCalculation>(ptr_mCharacterCalculations_value, 389493299u));
            }
        }
    }

    auto ptr_mCharacterPassiveSpell = prop->cast_prop<yordle::data::prop::reference_prop>(3916366866u);
    if(ptr_mCharacterPassiveSpell != nullptr) {
        mCharacterPassiveSpell = yordle::data::meta::bin_ref<yordle::data::meta::SpellObject>(1585338886u, ptr_mCharacterPassiveSpell->value);
    }

    auto ptr_mCharacterPassiveBuffs = prop->cast_prop<yordle::data::prop::set_prop>(3138631806u);
    if(ptr_mCharacterPassiveBuffs != nullptr) {
        for(const auto &set_mCharacterPassiveBuffs_entry : ptr_mCharacterPassiveBuffs->value) {
            auto ptr_mCharacterPassiveBuffs_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::inline_structure_prop>(set_mCharacterPassiveBuffs_entry);
            if(ptr_mCharacterPassiveBuffs_entry != nullptr) {
                mCharacterPassiveBuffs.emplace_back(yordle::data::meta::deserialize<yordle::data::meta::CharacterPassiveData>(ptr_mCharacterPassiveBuffs_entry, 2393107013u));
            }
        }
    }

    auto ptr_spellNames = prop->cast_prop<yordle::data::prop::set_prop>(3217256707u);
    if(ptr_spellNames != nullptr) {
        auto index_spellNames = 0;
        for(const auto &set_spellNames_entry : ptr_spellNames->value) {
            auto ptr_spellNames_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_spellNames_entry);
            if(ptr_spellNames_entry != nullptr) {
                spellNames[index_spellNames] = ptr_spellNames_entry->value;
            }
            index_spellNames++;
        }
    }

    auto ptr_extraSpells = prop->cast_prop<yordle::data::prop::set_prop>(2350752218u);
    if(ptr_extraSpells != nullptr) {
        auto index_extraSpells = 0;
        for(const auto &set_extraSpells_entry : ptr_extraSpells->value) {
            auto ptr_extraSpells_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::string_prop>(set_extraSpells_entry);
            if(ptr_extraSpells_entry != nullptr) {
                extraSpells[index_extraSpells] = ptr_extraSpells_entry->value;
            }
            index_extraSpells++;
        }
    }

    auto ptr_mDefaultStatOverrides = prop->cast_prop<yordle::data::prop::inline_structure_prop>(3848632940u);
    if(ptr_mDefaultStatOverrides != nullptr) {
        mDefaultStatOverrides = yordle::data::meta::deserialize<yordle::data::meta::StatFormulaDataList>(ptr_mDefaultStatOverrides, 1250314967u);
    }
}
