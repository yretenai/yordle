/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_HybridMaterialDef
#pragma once

#include <memory>
#include <string>
#include <cstdint>
#include <map>

#include <yordle/data/meta/bin_defs/MaterialDataCollections.hpp>
#include <yordle/data/meta/bin_defs/HybridMaterialDefPreset.hpp>
#include <yordle/data/meta/bin_defs/CustomShaderDef.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
#ifndef YORDLE_META_DEF_MaterialDataCollections
    struct MaterialDataCollections;
#endif

#ifndef YORDLE_META_DEF_HybridMaterialDefPreset
    struct HybridMaterialDefPreset;
#endif
    struct YORDLE_EXPORT HybridMaterialDef : public CustomShaderDef {
        explicit HybridMaterialDef(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 3114171249u || CustomShaderDef::is_type(type);
        }

        std::string name = "normal";
        uint32_t type = 1u;
        std::shared_ptr<yordle::data::meta::MaterialDataCollections> DataCollections {};
        yordle::data::meta::bin_ref<yordle::data::meta::HybridMaterialDefPreset> preset { 1659255250 };
        std::map<std::string, std::string> shaderMacros {};
    };
}
#define YORDLE_META_DEF_HybridMaterialDef
#endif
