/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#ifndef YORDLE_META_DEF_FloatTextFormattingData
#pragma once

#include <memory>
#include <cstdint>
#include <string>
#include <vector>

#include <yordle/data/meta/bin_defs/GameFontDescription.hpp>
#include <yordle/data/meta/bin_defs/FloatTextIconData.hpp>
#include <yordle/data/meta/bin_class.hpp>
#include <yordle/data/meta/bin_ref.hpp>
#include <yordle/data/prop/structure_prop.hpp>
#include <yordle/yordle_export.h>

namespace yordle::data::meta {
#ifndef YORDLE_META_DEF_GameFontDescription
    struct GameFontDescription;
#endif

#ifndef YORDLE_META_DEF_FloatTextIconData
    struct FloatTextIconData;
#endif
    struct YORDLE_EXPORT FloatTextFormattingData : public bin_class {
        explicit FloatTextFormattingData(const std::shared_ptr<yordle::data::prop::structure_prop> &prop);

        bool is_type(uint32_t type) override {
            return type == 585161597u;
        }

        yordle::data::meta::bin_fnv_hash mTypeName = 0u;
        float decay = 0.0f;
        yordle::data::meta::bin_ref<yordle::data::meta::GameFontDescription> mFontDescription { 3812866480 };
        int32_t colorOffsetR = 0;
        int32_t colorOffsetG = 0;
        int32_t colorOffsetB = 0;
        std::string combinableNumberFormat {};
        std::string combinableNegativeNumberFormat {};
        int32_t priority = 10;
        float height = 0.0f;
        float decayDelay = 0.0f;
        bool disabled = false;
        bool isAnimated = false;
        bool momentumFromHit = false;
        bool followSource = false;
        bool disableHorizontalReverse = false;
        bool disableVerticalReverse = false;
        bool combinableCounterDisplay = false;
        bool x20b20b79 = false;
        bool overwritePreviousNumber = false;
        int32_t combinableCounterCategory = 0;
        float minXVelocity = 1.0f;
        float maxXVelocity = 1.0f;
        float minYVelocity = 1.0f;
        float maxYVelocity = 1.0f;
        float startOffsetX = 0.0f;
        float startOffsetY = 0.0f;
        float hangTime = 0.0f;
        float randomStartOffsetMinX = 0.0f;
        float randomStartOffsetMaxX = 0.0f;
        float randomStartOffsetMinY = 0.0f;
        float randomStartOffsetMaxY = 0.0f;
        float growthYScalar = 0.0f;
        float growthXScalar = 0.0f;
        float relativeOffsetMin = 0.0f;
        float relativeOffsetMax = 0.0f;
        float continualForceX = 0.0f;
        float continualForceY = 0.0f;
        float continualForceXBase = 0.0f;
        float continualForceYBase = 0.0f;
        float shrinkTime = 1.0f;
        float Scale = 1.0f;
        float extendTimeOnNewDamage = 0.25f;
        float maxLifeTime = 5.0f;
        bool ignoreQueue = false;
        bool alternateRightLeft = false;
        bool ignoreCombineRules = false;
        int32_t maxInstances = -1;
        float shrinkScale = 1.0f;
        bool refreshExisting = false;
        bool attachToHealthBar = false;
        bool offsetByBoundingBox = false;
        uint8_t horizontalAlignment = 1u;
        uint8_t verticalAlignment = 1u;
        std::vector<std::shared_ptr<yordle::data::meta::FloatTextIconData>> icons {};
    };
}
#define YORDLE_META_DEF_FloatTextFormattingData
#endif
