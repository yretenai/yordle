/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#include <yordle/data/meta/bin_defs/Map.hpp>

#include <yordle/data/meta/bin_defs/Map.hpp>
#include <yordle/data/meta/bin_defs/MapCharacterList.hpp>
#include <yordle/data/meta/bin_defs/x7e19c23.hpp>
#include <yordle/data/meta/bin_defs/MapSkin.hpp>
#include <yordle/data/meta/bin_defs/MapVisibilityFlagDefinitions.hpp>
#include <yordle/data/meta/bin_defs/MapNavigationGridOverlays.hpp>
#include <yordle/data/meta/bin_defs/WadFileDescriptor.hpp>
#include <yordle/data/prop/empty_prop.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>
#include <yordle/data/prop/structure_prop.hpp>

yordle::data::meta::Map::Map(const std::shared_ptr<yordle::data::prop::structure_prop> &prop) : yordle::data::meta::WadFileDescriptor(prop) {
    if(prop == nullptr) {
        return;
    }
    auto ptr_mapStringId = prop->cast_prop<yordle::data::prop::string_prop>(3073648577u);
    if(ptr_mapStringId != nullptr) {
        mapStringId = ptr_mapStringId->value;
    }

    auto ptr_BasedOnMap = prop->cast_prop<yordle::data::prop::reference_prop>(3565747657u);
    if(ptr_BasedOnMap != nullptr) {
        BasedOnMap = yordle::data::meta::bin_ref<yordle::data::meta::Map>(3751997361u, ptr_BasedOnMap->value);
    }

    auto ptr_characterLists = prop->cast_prop<yordle::data::prop::unordered_set_prop>(137362161u);
    if(ptr_characterLists != nullptr) {
        for(const auto &set_characterLists_entry : ptr_characterLists->value) {
            auto ptr_characterLists_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::reference_prop>(set_characterLists_entry);
            if(ptr_characterLists_entry != nullptr) {
                characterLists.emplace_back(yordle::data::meta::bin_ref<yordle::data::meta::MapCharacterList>(199060396u, ptr_characterLists_entry->value));
            }
        }
    }

    auto ptr_x150e8670 = prop->cast_prop<yordle::data::prop::unordered_set_prop>(353273456u);
    if(ptr_x150e8670 != nullptr) {
        for(const auto &set_x150e8670_entry : ptr_x150e8670->value) {
            auto ptr_x150e8670_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::reference_prop>(set_x150e8670_entry);
            if(ptr_x150e8670_entry != nullptr) {
                x150e8670.emplace_back(yordle::data::meta::bin_ref<yordle::data::meta::x7e19c23>(132226083u, ptr_x150e8670_entry->value));
            }
        }
    }

    auto ptr_mapSkins = prop->cast_prop<yordle::data::prop::unordered_set_prop>(785627485u);
    if(ptr_mapSkins != nullptr) {
        for(const auto &set_mapSkins_entry : ptr_mapSkins->value) {
            auto ptr_mapSkins_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::reference_prop>(set_mapSkins_entry);
            if(ptr_mapSkins_entry != nullptr) {
                mapSkins.emplace_back(yordle::data::meta::bin_ref<yordle::data::meta::MapSkin>(3441028924u, ptr_mapSkins_entry->value));
            }
        }
    }

    auto ptr_x6744e6e3 = prop->cast_prop<yordle::data::prop::uint8_prop>(1732568803u);
    if(ptr_x6744e6e3 != nullptr) {
        x6744e6e3 = ptr_x6744e6e3->value;
    }

    auto ptr_x9e019715 = prop->cast_prop<yordle::data::prop::inline_structure_prop>(2650904341u);
    if(ptr_x9e019715 != nullptr) {
        x9e019715 = yordle::data::meta::deserialize<yordle::data::meta::MapVisibilityFlagDefinitions>(ptr_x9e019715, 1484706743u);
    }

    auto ptr_NavigationGridOverlays = prop->cast_prop<yordle::data::prop::inline_structure_prop>(1830007018u);
    if(ptr_NavigationGridOverlays != nullptr) {
        NavigationGridOverlays = yordle::data::meta::deserialize<yordle::data::meta::MapNavigationGridOverlays>(ptr_NavigationGridOverlays, 3880372342u);
    }
}
