/// <auto-generated>
// THIS FILE IS AUTO GENERATED DO NOT EDIT
#include <yordle/data/meta/bin_defs/TrackMouseMovement.hpp>

#include <yordle/data/meta/bin_defs/MissileMovementSpec.hpp>
#include <yordle/data/prop/empty_prop.hpp>
#include <yordle/data/prop/inline_structure_prop.hpp>
#include <yordle/data/prop/map_prop.hpp>
#include <yordle/data/prop/optional_prop.hpp>
#include <yordle/data/prop/primitive_array_prop.hpp>
#include <yordle/data/prop/primitive_prop.hpp>
#include <yordle/data/prop/set_prop.hpp>
#include <yordle/data/prop/string_prop.hpp>
#include <yordle/data/prop/unordered_set_prop.hpp>
#include <yordle/data/prop/structure_prop.hpp>

yordle::data::meta::TrackMouseMovement::TrackMouseMovement(const std::shared_ptr<yordle::data::prop::structure_prop> &prop) : yordle::data::meta::MissileMovementSpec(prop) {
    if(prop == nullptr) {
        return;
    }
    auto ptr_mInferDirectionFromFacingIfNeeded = prop->cast_prop<yordle::data::prop::bool_prop>(2046346341u);
    if(ptr_mInferDirectionFromFacingIfNeeded != nullptr) {
        mInferDirectionFromFacingIfNeeded = ptr_mInferDirectionFromFacingIfNeeded->value;
    }

    auto ptr_mProjectTargetToCastRange = prop->cast_prop<yordle::data::prop::bool_prop>(665175815u);
    if(ptr_mProjectTargetToCastRange != nullptr) {
        mProjectTargetToCastRange = ptr_mProjectTargetToCastRange->value;
    }

    auto ptr_x99aa2d1f = prop->cast_prop<yordle::data::prop::bool_prop>(2578066719u);
    if(ptr_x99aa2d1f != nullptr) {
        x99aa2d1f = ptr_x99aa2d1f->value;
    }

    auto ptr_mUseGroundHeightAtTarget = prop->cast_prop<yordle::data::prop::bool_prop>(1847500467u);
    if(ptr_mUseGroundHeightAtTarget != nullptr) {
        mUseGroundHeightAtTarget = ptr_mUseGroundHeightAtTarget->value;
    }

    auto ptr_mAcceleration = prop->cast_prop<yordle::data::prop::float32_prop>(2197761356u);
    if(ptr_mAcceleration != nullptr) {
        mAcceleration = ptr_mAcceleration->value;
    }

    auto ptr_mMinSpeed = prop->cast_prop<yordle::data::prop::float32_prop>(3364125375u);
    if(ptr_mMinSpeed != nullptr) {
        mMinSpeed = ptr_mMinSpeed->value;
    }

    auto ptr_mMaxSpeed = prop->cast_prop<yordle::data::prop::float32_prop>(4018095465u);
    if(ptr_mMaxSpeed != nullptr) {
        mMaxSpeed = ptr_mMaxSpeed->value;
    }

    auto ptr_mInitialSpeed = prop->cast_prop<yordle::data::prop::float32_prop>(2196887431u);
    if(ptr_mInitialSpeed != nullptr) {
        mInitialSpeed = ptr_mInitialSpeed->value;
    }

    auto ptr_x84bb076a = prop->cast_prop<yordle::data::prop::set_prop>(2226849642u);
    if(ptr_x84bb076a != nullptr) {
        auto index_x84bb076a = 0;
        for(const auto &set_x84bb076a_entry : ptr_x84bb076a->value) {
            auto ptr_x84bb076a_entry = yordle::data::prop::empty_prop::cast_prop<yordle::data::prop::float32_prop>(set_x84bb076a_entry);
            if(ptr_x84bb076a_entry != nullptr) {
                x84bb076a[index_x84bb076a] = ptr_x84bb076a_entry->value;
            }
            index_x84bb076a++;
        }
    }

    auto ptr_x604989cf = prop->cast_prop<yordle::data::prop::float32_prop>(1615432143u);
    if(ptr_x604989cf != nullptr) {
        x604989cf = ptr_x604989cf->value;
    }
}
